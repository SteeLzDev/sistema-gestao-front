{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\"flex flex-col gap-1.5 px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,0BAA0B;QACvC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Tabs({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\r\n  return (\r\n    <TabsPrimitive.Root\r\n      data-slot=\"tabs\"\r\n      className={cn(\"flex flex-col gap-2\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TabsList({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\r\n  return (\r\n    <TabsPrimitive.List\r\n      data-slot=\"tabs-list\"\r\n      className={cn(\r\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-1\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TabsTrigger({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\r\n  return (\r\n    <TabsPrimitive.Trigger\r\n      data-slot=\"tabs-trigger\"\r\n      className={cn(\r\n        \"data-[state=active]:bg-background data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring inline-flex flex-1 items-center justify-center gap-1.5 rounded-md px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TabsContent({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\r\n  return (\r\n    <TabsPrimitive.Content\r\n      data-slot=\"tabs-content\"\r\n      className={cn(\"flex-1 outline-none\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2fACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\r\n        outline:\r\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,8cACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/services/apiClient.ts"],"sourcesContent":["import axios from \"axios\"\r\n\r\n// Function to check if we're in the browser\r\nconst isBrowser = () => typeof window !== \"undefined\"\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8080/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n})\r\n\r\n// Add request interceptor for authentication\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    // Add authentication token if available\r\n    if (isBrowser()) {\r\n      const token = localStorage.getItem(\"auth_token\")\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`\r\n      }\r\n    }\r\n    return config\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error)\r\n  },\r\n)\r\n\r\n// Add response interceptor for error handling\r\napiClient.interceptors.response.use(\r\n  (response) => {\r\n    return response\r\n  },\r\n  (error) => {\r\n    // Handle 401 Unauthorized errors\r\n    if (error.response && error.response.status === 401) {\r\n      // Clear auth data and redirect to login if in browser\r\n      if (isBrowser()) {\r\n        localStorage.removeItem(\"auth_token\")\r\n        localStorage.removeItem(\"user\")\r\n        window.location.href = \"/login\"\r\n      }\r\n    }\r\n    return Promise.reject(error)\r\n  },\r\n)\r\n\r\nexport default apiClient\r\n\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,4CAA4C;AAC5C,MAAM,YAAY,IAAM,gBAAkB;AAE1C,MAAM,YAAY,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC7B,SAAS,gFAAmC;IAC5C,SAAS;QACP,gBAAgB;IAClB;AACF;AAEA,6CAA6C;AAC7C,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAChC,CAAC;IACC,wCAAwC;IACxC,IAAI,aAAa;;IAKjB;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,8CAA8C;AAC9C,UAAU,YAAY,CAAC,QAAQ,CAAC,GAAG,CACjC,CAAC;IACC,OAAO;AACT,GACA,CAAC;IACC,iCAAiC;IACjC,IAAI,MAAM,QAAQ,IAAI,MAAM,QAAQ,CAAC,MAAM,KAAK,KAAK;QACnD,sDAAsD;QACtD,IAAI,aAAa;;QAIjB;IACF;IACA,OAAO,QAAQ,MAAM,CAAC;AACxB;uCAGa","debugId":null}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/services/dashboardService.ts"],"sourcesContent":["import apiClient from \"./apiClient\";\r\nimport { produtoService } from \"./api\";\r\nimport { vendaService } from \"./api\";\r\nimport { filaService } from \"./api\";\r\n\r\nexport interface DashboardData {\r\n  totalSales: number;\r\n  salesGrowth: number;\r\n  totalCustomers: number;\r\n  customersGrowth: number;\r\n  totalProducts: number;\r\n  lowStockProducts: number;\r\n  queueWaiting: number;\r\n  queueInService: number;\r\n}\r\n\r\nexport interface SalesData {\r\n  name: string;\r\n  total: number;\r\n}\r\n\r\nexport interface RecentSale {\r\n  id: number;\r\n  customer: string;\r\n  email: string;\r\n  amount: number;\r\n  date: string;\r\n  status: string;\r\n}\r\n\r\nexport interface LowStockProduct {\r\n  id: number;\r\n  name: string;\r\n  category: string;\r\n  price: number;\r\n  stock: number;\r\n  minStock: number;\r\n}\r\n\r\nexport interface QueueItem {\r\n  id: number;\r\n  customer: string;\r\n  service: string;\r\n  status: string;\r\n  arrivalTime: string;\r\n  priority: string;\r\n}\r\n\r\n// Dados mockados para usar enquanto os endpoints reais não estão disponíveis\r\nconst mockDashboardData: DashboardData = {\r\n  totalSales: 12890.75,\r\n  salesGrowth: 14.5,\r\n  totalCustomers: 342,\r\n  customersGrowth: 7.2,\r\n  totalProducts: 189,\r\n  lowStockProducts: 12,\r\n  queueWaiting: 8,\r\n  queueInService: 3,\r\n};\r\n\r\nconst mockMonthlySales: SalesData[] = [\r\n  { name: \"Jan\", total: 8400 },\r\n  { name: \"Fev\", total: 7300 },\r\n  { name: \"Mar\", total: 9800 },\r\n  { name: \"Abr\", total: 8900 },\r\n  { name: \"Mai\", total: 11200 },\r\n  { name: \"Jun\", total: 9300 },\r\n  { name: \"Jul\", total: 10800 },\r\n  { name: \"Ago\", total: 12500 },\r\n  { name: \"Set\", total: 11900 },\r\n  { name: \"Out\", total: 13100 },\r\n  { name: \"Nov\", total: 12400 },\r\n  { name: \"Dez\", total: 14800 },\r\n];\r\n\r\nconst mockRecentSales: RecentSale[] = [\r\n  {\r\n    id: 1,\r\n    customer: \"João Silva\",\r\n    email: \"joao.silva@example.com\",\r\n    amount: 259.99,\r\n    date: \"2023-11-15T14:32:00Z\",\r\n    status: \"completed\",\r\n  },\r\n  {\r\n    id: 2,\r\n    customer: \"Maria Oliveira\",\r\n    email: \"maria.oliveira@example.com\",\r\n    amount: 478.5,\r\n    date: \"2023-11-15T10:15:00Z\",\r\n    status: \"completed\",\r\n  },\r\n  {\r\n    id: 3,\r\n    customer: \"Pedro Santos\",\r\n    email: \"pedro.santos@example.com\",\r\n    amount: 189.9,\r\n    date: \"2023-11-14T16:45:00Z\",\r\n    status: \"completed\",\r\n  },\r\n  {\r\n    id: 4,\r\n    customer: \"Ana Costa\",\r\n    email: \"ana.costa@example.com\",\r\n    amount: 325.75,\r\n    date: \"2023-11-14T09:20:00Z\",\r\n    status: \"completed\",\r\n  },\r\n  {\r\n    id: 5,\r\n    customer: \"Carlos Ferreira\",\r\n    email: \"carlos.ferreira@example.com\",\r\n    amount: 592.3,\r\n    date: \"2023-11-13T15:10:00Z\",\r\n    status: \"completed\",\r\n  },\r\n];\r\n\r\nexport const dashboardService = {\r\n  // Obter dados gerais do dashboard\r\n  getDashboardData: async (): Promise<DashboardData> => {\r\n    try {\r\n      // Obter dados do endpoint específico\r\n      const response = await apiClient.get(\"/dashboard\");\r\n      const data = response.data;\r\n      \r\n      // Mapear os dados do backend para o formato esperado pelo frontend\r\n      return {\r\n        totalSales: data.vendasRecentes?.total || 0,\r\n        salesGrowth: 14.5, // Valor fixo por enquanto\r\n        totalCustomers: 342, // Valor fixo por enquanto\r\n        customersGrowth: 7.2, // Valor fixo por enquanto\r\n        totalProducts: data.estoque?.total || 0,\r\n        lowStockProducts: data.estoque?.baixoEstoque || 0,\r\n        queueWaiting: data.fila?.aguardando || 0,\r\n        queueInService: data.fila?.emAtendimento || 0,\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Erro ao obter dados do dashboard:\", error);\r\n      // Retornar dados mockados em caso de erro\r\n      return mockDashboardData;\r\n    }\r\n  },\r\n\r\n  // Obter dados de vendas mensais\r\n  getMonthlySales: async (): Promise<SalesData[]> => {\r\n    try {\r\n      // Obter relatório mensal\r\n      const response = await apiClient.get(\"/dashboard/relatorio/mensal\");\r\n      const data = response.data;\r\n      \r\n      // Mapear vendas por dia para o formato esperado pelo gráfico\r\n      const vendasPorDia = data.vendasPorDia || {};\r\n      \r\n      // Agrupar por mês\r\n      const meses = [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"];\r\n      const vendasPorMes: SalesData[] = meses.map(mes => ({ name: mes, total: 0 }));\r\n      \r\n      // Preencher com dados reais se disponíveis\r\n      Object.entries(vendasPorDia).forEach(([data, valor]) => {\r\n        const mes = new Date(data).getMonth();\r\n        vendasPorMes[mes].total += Number(valor);\r\n      });\r\n      \r\n      return vendasPorMes;\r\n    } catch (error) {\r\n      console.error(\"Erro ao obter vendas mensais:\", error);\r\n      // Retornar dados mockados em caso de erro\r\n      return mockMonthlySales;\r\n    }\r\n  },\r\n\r\n  // Obter vendas recentes\r\n  getRecentSales: async (): Promise<RecentSale[]> => {\r\n    try {\r\n      // Obter dados do dashboard\r\n      const response = await apiClient.get(\"/dashboard\");\r\n      const data = response.data;\r\n      \r\n      // Mapear vendas recentes para o formato esperado pelo frontend\r\n      if (data.vendasRecentes?.itens && data.vendasRecentes.itens.length > 0) {\r\n        return data.vendasRecentes.itens.map((venda: any) => ({\r\n          id: venda.id,\r\n          customer: venda.cliente,\r\n          email: \"cliente@exemplo.com\", // O backend não retorna email\r\n          amount: venda.valorTotal,\r\n          date: venda.dataHora,\r\n          status: \"completed\",\r\n        }));\r\n      }\r\n      \r\n      // Se não houver dados, retornar mock\r\n      return mockRecentSales;\r\n    } catch (error) {\r\n      console.error(\"Erro ao obter vendas recentes:\", error);\r\n      // Retornar dados mockados em caso de erro\r\n      return mockRecentSales;\r\n    }\r\n  },\r\n\r\n  // Obter produtos com estoque baixo\r\n  getLowStockProducts: async (): Promise<LowStockProduct[]> => {\r\n    try {\r\n      // Obter dados do dashboard\r\n      const response = await apiClient.get(\"/dashboard\");\r\n      const data = response.data;\r\n      \r\n      // Mapear produtos com estoque baixo para o formato esperado pelo frontend\r\n      if (data.estoque?.itens && data.estoque.itens.length > 0) {\r\n        return data.estoque.itens.map((produto: any) => ({\r\n          id: produto.id,\r\n          name: produto.nome,\r\n          category: \"Categoria\", // O backend não retorna categoria\r\n          price: produto.preco,\r\n          stock: produto.quantidade,\r\n          minStock: 5, // Valor fixo por enquanto\r\n        }));\r\n      }\r\n      \r\n      // Se não houver dados, retornar array vazio\r\n      return [];\r\n    } catch (error) {\r\n      console.error(\"Erro ao obter produtos com estoque baixo:\", error);\r\n      // Retornar array vazio em caso de erro\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Obter dados da fila de atendimento\r\n  getServiceQueue: async (): Promise<QueueItem[]> => {\r\n    try {\r\n      // Obter dados do dashboard\r\n      const response = await apiClient.get(\"/dashboard\");\r\n      const data = response.data;\r\n      \r\n      // Mapear clientes na fila para o formato esperado pelo frontend\r\n      if (data.fila?.itens && data.fila.itens.length > 0) {\r\n        return data.fila.itens.map((cliente: any) => ({\r\n          id: cliente.id,\r\n          customer: cliente.nome,\r\n          service: cliente.servico,\r\n          status: cliente.status.toLowerCase(),\r\n          arrivalTime: cliente.chegada,\r\n          priority: \"normal\", // O backend não retorna prioridade\r\n        }));\r\n      }\r\n      \r\n      // Se não houver dados, retornar array vazio\r\n      return [];\r\n    } catch (error) {\r\n      console.error(\"Erro ao obter dados da fila de atendimento:\", error);\r\n      // Retornar array vazio em caso de erro\r\n      return [];\r\n    }\r\n  },\r\n};\r\n\r\nexport default dashboardService;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 599, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/dashboard/overview.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { Bar, BarChart, ResponsiveContainer, XAxis, YAxis, Tooltip, CartesianGrid } from \"recharts\"\r\nimport { dashboardService, type SalesData } from \"@/services/dashboardService\"\r\nimport { useToast } from \"@/components/ui/use-toast\"\r\n\r\n// Dados mockados como fallback\r\nconst mockData = [\r\n  { name: \"Jan\", total: 8400 },\r\n  { name: \"Fev\", total: 7300 },\r\n  { name: \"Mar\", total: 9800 },\r\n  { name: \"Abr\", total: 8900 },\r\n  { name: \"Mai\", total: 11200 },\r\n  { name: \"Jun\", total: 9300 },\r\n  { name: \"Jul\", total: 10800 },\r\n  { name: \"Ago\", total: 12500 },\r\n  { name: \"Set\", total: 11900 },\r\n  { name: \"Out\", total: 13100 },\r\n  { name: \"Nov\", total: 12400 },\r\n  { name: \"Dez\", total: 14800 },\r\n]\r\n\r\nexport function Overview() {\r\n  const [data, setData] = useState<SalesData[]>(mockData)\r\n  const [loading, setLoading] = useState(true)\r\n  const { toast } = useToast()\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true)\r\n        const salesData = await dashboardService.getMonthlySales()\r\n        setData(salesData)\r\n      } catch (error) {\r\n        console.error(\"Erro ao carregar dados de vendas mensais:\", error)\r\n        toast({\r\n          title: \"Erro ao carregar gráfico\",\r\n          description: \"Não foi possível carregar os dados de vendas mensais. Usando dados de exemplo.\",\r\n          variant: \"destructive\",\r\n        })\r\n        // Fallback para dados mockados em caso de erro\r\n        setData(mockData)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [toast])\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={350}>\r\n      <BarChart data={data}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#444\" opacity={0.1} />\r\n        <XAxis dataKey=\"name\" stroke=\"#888888\" fontSize={12} tickLine={false} axisLine={false} />\r\n        <YAxis\r\n          stroke=\"#888888\"\r\n          fontSize={12}\r\n          tickLine={false}\r\n          axisLine={false}\r\n          tickFormatter={(value: number) => `R$${value}`}\r\n        />\r\n        <Tooltip\r\n          formatter={(value: number) => [`R$ ${value.toLocaleString(\"pt-BR\")}`, \"Total\"]}\r\n          labelFormatter={(label: string) => `Mês: ${label}`}\r\n        />\r\n        <Bar dataKey=\"total\" fill=\"#3b82f6\" radius={[4, 4, 0, 0]} className=\"fill-primary\" />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AALA;;;;;;AAOA,+BAA+B;AAC/B,MAAM,WAAW;IACf;QAAE,MAAM;QAAO,OAAO;IAAK;IAC3B;QAAE,MAAM;QAAO,OAAO;IAAK;IAC3B;QAAE,MAAM;QAAO,OAAO;IAAK;IAC3B;QAAE,MAAM;QAAO,OAAO;IAAK;IAC3B;QAAE,MAAM;QAAO,OAAO;IAAM;IAC5B;QAAE,MAAM;QAAO,OAAO;IAAK;IAC3B;QAAE,MAAM;QAAO,OAAO;IAAM;IAC5B;QAAE,MAAM;QAAO,OAAO;IAAM;IAC5B;QAAE,MAAM;QAAO,OAAO;IAAM;IAC5B;QAAE,MAAM;QAAO,OAAO;IAAM;IAC5B;QAAE,MAAM;QAAO,OAAO;IAAM;IAC5B;QAAE,MAAM;QAAO,OAAO;IAAM;CAC7B;AAEM,SAAS;IACd,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,WAAQ,AAAD;IAEzB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,WAAW;gBACX,MAAM,YAAY,MAAM,4HAAA,CAAA,mBAAgB,CAAC,eAAe;gBACxD,QAAQ;YACV,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6CAA6C;gBAC3D,MAAM;oBACJ,OAAO;oBACP,aAAa;oBACb,SAAS;gBACX;gBACA,+CAA+C;gBAC/C,QAAQ;YACV,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG;QAAC;KAAM;IAEV,qBACE,8OAAC,mKAAA,CAAA,sBAAmB;QAAC,OAAM;QAAO,QAAQ;kBACxC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;YAAC,MAAM;;8BACd,8OAAC,6JAAA,CAAA,gBAAa;oBAAC,iBAAgB;oBAAM,QAAO;oBAAO,SAAS;;;;;;8BAC5D,8OAAC,qJAAA,CAAA,QAAK;oBAAC,SAAQ;oBAAO,QAAO;oBAAU,UAAU;oBAAI,UAAU;oBAAO,UAAU;;;;;;8BAChF,8OAAC,qJAAA,CAAA,QAAK;oBACJ,QAAO;oBACP,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,eAAe,CAAC,QAAkB,CAAC,EAAE,EAAE,OAAO;;;;;;8BAEhD,8OAAC,uJAAA,CAAA,UAAO;oBACN,WAAW,CAAC,QAAkB;4BAAC,CAAC,GAAG,EAAE,MAAM,cAAc,CAAC,UAAU;4BAAE;yBAAQ;oBAC9E,gBAAgB,CAAC,QAAkB,CAAC,KAAK,EAAE,OAAO;;;;;;8BAEpD,8OAAC,mJAAA,CAAA,MAAG;oBAAC,SAAQ;oBAAQ,MAAK;oBAAU,QAAQ;wBAAC;wBAAG;wBAAG;wBAAG;qBAAE;oBAAE,WAAU;;;;;;;;;;;;;;;;;AAI5E","debugId":null}},
    {"offset": {"line": 778, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Avatar({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\r\n  return (\r\n    <AvatarPrimitive.Root\r\n      data-slot=\"avatar\"\r\n      className={cn(\r\n        \"relative flex size-8 shrink-0 overflow-hidden rounded-full\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction AvatarImage({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\r\n  return (\r\n    <AvatarPrimitive.Image\r\n      data-slot=\"avatar-image\"\r\n      className={cn(\"aspect-square size-full\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction AvatarFallback({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\r\n  return (\r\n    <AvatarPrimitive.Fallback\r\n      data-slot=\"avatar-fallback\"\r\n      className={cn(\r\n        \"bg-muted flex size-full items-center justify-center rounded-full\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Avatar, AvatarImage, AvatarFallback }\r\n"],"names":[],"mappings":";;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,8OAAC,kKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,kKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,2BAA2B;QACxC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,eAAe,EACtB,SAAS,EACT,GAAG,OACmD;IACtD,qBACE,8OAAC,kKAAA,CAAA,WAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,oEACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 830, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/avatar-fallback.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\n\r\ninterface AvatarWithFallbackProps {\r\n  name: string\r\n  src?: string\r\n  className?: string\r\n}\r\n\r\nexport function AvatarWithFallback({ name, src, className }: AvatarWithFallbackProps) {\r\n  // Função para gerar as iniciais do nome\r\n  const getInitials = (name: string) => {\r\n    return name\r\n      .split(\" \")\r\n      .map((n) => n[0])\r\n      .join(\"\")\r\n      .toUpperCase()\r\n      .substring(0, 2)\r\n  }\r\n\r\n  // Função para gerar uma cor baseada no nome\r\n  const getColorFromName = (name: string) => {\r\n    let hash = 0\r\n    for (let i = 0; i < name.length; i++) {\r\n      hash = name.charCodeAt(i) + ((hash << 5) - hash)\r\n    }\r\n    const hue = Math.abs(hash % 360)\r\n    return `hsl(${hue}, 65%, 95%)`\r\n  }\r\n\r\n  const initials = getInitials(name)\r\n  const bgColor = getColorFromName(name)\r\n\r\n  return (\r\n    <Avatar className={className}>\r\n      <AvatarImage src={src} alt={name} />\r\n      <AvatarFallback style={{ backgroundColor: bgColor, color: `hsl(${parseInt(bgColor.split(\",\")[0].replace(\"hsl(\", \"\"))}, 65%, 40%)` }}>\r\n        {initials}\r\n      </AvatarFallback>\r\n    </Avatar>\r\n  )\r\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAUO,SAAS,mBAAmB,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAA2B;IAClF,wCAAwC;IACxC,MAAM,cAAc,CAAC;QACnB,OAAO,KACJ,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,IAAM,CAAC,CAAC,EAAE,EACf,IAAI,CAAC,IACL,WAAW,GACX,SAAS,CAAC,GAAG;IAClB;IAEA,4CAA4C;IAC5C,MAAM,mBAAmB,CAAC;QACxB,IAAI,OAAO;QACX,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAAK;YACpC,OAAO,KAAK,UAAU,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI;QACjD;QACA,MAAM,MAAM,KAAK,GAAG,CAAC,OAAO;QAC5B,OAAO,CAAC,IAAI,EAAE,IAAI,WAAW,CAAC;IAChC;IAEA,MAAM,WAAW,YAAY;IAC7B,MAAM,UAAU,iBAAiB;IAEjC,qBACE,8OAAC,2HAAA,CAAA,SAAM;QAAC,WAAW;;0BACjB,8OAAC,2HAAA,CAAA,cAAW;gBAAC,KAAK;gBAAK,KAAK;;;;;;0BAC5B,8OAAC,2HAAA,CAAA,iBAAc;gBAAC,OAAO;oBAAE,iBAAiB;oBAAS,OAAO,CAAC,IAAI,EAAE,SAAS,QAAQ,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,KAAK,WAAW,CAAC;gBAAC;0BAC/H;;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 889, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/dashboard/recent-sales.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { AvatarWithFallback } from \"@/components/ui/avatar-fallback\"\r\nimport { dashboardService, type RecentSale } from \"@/services/dashboardService\"\r\nimport { useToast } from \"@/components/ui/use-toast\"\r\n\r\n// Dados mockados como fallback\r\nconst mockSales = [\r\n  {\r\n    id: 1,\r\n    customer: \"João Silva\",\r\n    email: \"joao.silva@example.com\",\r\n    amount: 259.99,\r\n    date: \"2023-11-15T14:32:00Z\",\r\n    status: \"completed\",\r\n  },\r\n  {\r\n    id: 2,\r\n    customer: \"Maria Oliveira\",\r\n    email: \"maria.oliveira@example.com\",\r\n    amount: 478.5,\r\n    date: \"2023-11-15T10:15:00Z\",\r\n    status: \"completed\",\r\n  },\r\n  {\r\n    id: 3,\r\n    customer: \"Pedro Santos\",\r\n    email: \"pedro.santos@example.com\",\r\n    amount: 189.9,\r\n    date: \"2023-11-14T16:45:00Z\",\r\n    status: \"completed\",\r\n  },\r\n  {\r\n    id: 4,\r\n    customer: \"Ana Costa\",\r\n    email: \"ana.costa@example.com\",\r\n    amount: 325.75,\r\n    date: \"2023-11-14T09:20:00Z\",\r\n    status: \"completed\",\r\n  },\r\n  {\r\n    id: 5,\r\n    customer: \"Carlos Ferreira\",\r\n    email: \"carlos.ferreira@example.com\",\r\n    amount: 592.3,\r\n    date: \"2023-11-13T15:10:00Z\",\r\n    status: \"completed\",\r\n  },\r\n]\r\n\r\nexport function RecentSales() {\r\n  const [sales, setSales] = useState<RecentSale[]>(mockSales)\r\n  const [loading, setLoading] = useState(true)\r\n  const { toast } = useToast()\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true)\r\n        const recentSales = await dashboardService.getRecentSales()\r\n        setSales(recentSales.length > 0 ? recentSales : mockSales)\r\n      } catch (error) {\r\n        console.error(\"Erro ao carregar vendas recentes:\", error)\r\n        toast({\r\n          title: \"Erro ao carregar vendas\",\r\n          description: \"Não foi possível carregar as vendas recentes. Usando dados de exemplo.\",\r\n          variant: \"destructive\",\r\n        })\r\n        // Fallback para dados mockados em caso de erro\r\n        setSales(mockSales)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [toast])\r\n\r\n  if (loading) {\r\n    return <div className=\"flex justify-center p-4\">Carregando vendas recentes...</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {sales.map((sale) => (\r\n        <div key={sale.id} className=\"flex items-center\">\r\n          <AvatarWithFallback name={sale.customer} className=\"h-9 w-9\" />\r\n          <div className=\"ml-4 space-y-1\">\r\n            <p className=\"text-sm font-medium leading-none\">{sale.customer}</p>\r\n            <p className=\"text-sm text-muted-foreground\">{sale.email}</p>\r\n          </div>\r\n          <div className=\"ml-auto font-medium\">\r\n            {new Intl.NumberFormat(\"pt-BR\", {\r\n              style: \"currency\",\r\n              currency: \"BRL\",\r\n            }).format(sale.amount)}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,+BAA+B;AAC/B,MAAM,YAAY;IAChB;QACE,IAAI;QACJ,UAAU;QACV,OAAO;QACP,QAAQ;QACR,MAAM;QACN,QAAQ;IACV;IACA;QACE,IAAI;QACJ,UAAU;QACV,OAAO;QACP,QAAQ;QACR,MAAM;QACN,QAAQ;IACV;IACA;QACE,IAAI;QACJ,UAAU;QACV,OAAO;QACP,QAAQ;QACR,MAAM;QACN,QAAQ;IACV;IACA;QACE,IAAI;QACJ,UAAU;QACV,OAAO;QACP,QAAQ;QACR,MAAM;QACN,QAAQ;IACV;IACA;QACE,IAAI;QACJ,UAAU;QACV,OAAO;QACP,QAAQ;QACR,MAAM;QACN,QAAQ;IACV;CACD;AAEM,SAAS;IACd,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB;IACjD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,WAAQ,AAAD;IAEzB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,WAAW;gBACX,MAAM,cAAc,MAAM,4HAAA,CAAA,mBAAgB,CAAC,cAAc;gBACzD,SAAS,YAAY,MAAM,GAAG,IAAI,cAAc;YAClD,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,qCAAqC;gBACnD,MAAM;oBACJ,OAAO;oBACP,aAAa;oBACb,SAAS;gBACX;gBACA,+CAA+C;gBAC/C,SAAS;YACX,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG;QAAC;KAAM;IAEV,IAAI,SAAS;QACX,qBAAO,8OAAC;YAAI,WAAU;sBAA0B;;;;;;IAClD;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;gBAAkB,WAAU;;kCAC3B,8OAAC,uIAAA,CAAA,qBAAkB;wBAAC,MAAM,KAAK,QAAQ;wBAAE,WAAU;;;;;;kCACnD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAAoC,KAAK,QAAQ;;;;;;0CAC9D,8OAAC;gCAAE,WAAU;0CAAiC,KAAK,KAAK;;;;;;;;;;;;kCAE1D,8OAAC;wBAAI,WAAU;kCACZ,IAAI,KAAK,YAAY,CAAC,SAAS;4BAC9B,OAAO;4BACP,UAAU;wBACZ,GAAG,MAAM,CAAC,KAAK,MAAM;;;;;;;eAVf,KAAK,EAAE;;;;;;;;;;AAgBzB","debugId":null}},
    {"offset": {"line": 1050, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\r\n        outline:\r\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Badge({\r\n  className,\r\n  variant,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"span\"> &\r\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\r\n  const Comp = asChild ? Slot : \"span\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"badge\"\r\n      className={cn(badgeVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1096, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/table.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"table-container\"\r\n      className=\"relative w-full overflow-x-auto\"\r\n    >\r\n      <table\r\n        data-slot=\"table\"\r\n        className={cn(\"w-full caption-bottom text-sm\", className)}\r\n        {...props}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\r\n  return (\r\n    <thead\r\n      data-slot=\"table-header\"\r\n      className={cn(\"[&_tr]:border-b\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\r\n  return (\r\n    <tbody\r\n      data-slot=\"table-body\"\r\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\r\n  return (\r\n    <tfoot\r\n      data-slot=\"table-footer\"\r\n      className={cn(\r\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\r\n  return (\r\n    <tr\r\n      data-slot=\"table-row\"\r\n      className={cn(\r\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\r\n  return (\r\n    <th\r\n      data-slot=\"table-head\"\r\n      className={cn(\r\n        \"text-muted-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\r\n  return (\r\n    <td\r\n      data-slot=\"table-cell\"\r\n      className={cn(\r\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TableCaption({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"caption\">) {\r\n  return (\r\n    <caption\r\n      data-slot=\"table-caption\"\r\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,8OAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,8OAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,4JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1214, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/dashboard/inventory-status.tsx"],"sourcesContent":["import { Badge } from \"@/components/ui/badge\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\n\r\n// Dados simulados para produtos com estoque baixo\r\nconst lowStockProducts = [\r\n  {\r\n    id: 1,\r\n    name: \"Óleo de Motor 5W30\",\r\n    category: \"Lubrificantes\",\r\n    price: 39.9,\r\n    stock: 3,\r\n    minStock: 5,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Filtro de Ar - Modelo X\",\r\n    category: \"Filtros\",\r\n    price: 25.5,\r\n    stock: 2,\r\n    minStock: 10,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Pastilha de Freio - Modelo Y\",\r\n    category: \"Freios\",\r\n    price: 89.9,\r\n    stock: 4,\r\n    minStock: 8,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Bateria 60Ah\",\r\n    category: \"Elétrica\",\r\n    price: 349.9,\r\n    stock: 1,\r\n    minStock: 3,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Lâmpada de Farol H7\",\r\n    category: \"Iluminação\",\r\n    price: 15.9,\r\n    stock: 4,\r\n    minStock: 15,\r\n  },\r\n]\r\n\r\nexport function InventoryStatus() {\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-lg font-medium mb-4\">Produtos com Estoque Baixo</h3>\r\n      <Table>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead>Produto</TableHead>\r\n            <TableHead>Categoria</TableHead>\r\n            <TableHead>Preço</TableHead>\r\n            <TableHead>Estoque</TableHead>\r\n            <TableHead>Status</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {lowStockProducts.map((product) => (\r\n            <TableRow key={product.id}>\r\n              <TableCell className=\"font-medium\">{product.name}</TableCell>\r\n              <TableCell>{product.category}</TableCell>\r\n              <TableCell>\r\n                {new Intl.NumberFormat(\"pt-BR\", {\r\n                  style: \"currency\",\r\n                  currency: \"BRL\",\r\n                }).format(product.price)}\r\n              </TableCell>\r\n              <TableCell>{product.stock}</TableCell>\r\n              <TableCell>\r\n                <Badge\r\n                  variant={product.stock <= product.minStock / 3 ? \"destructive\" : \"outline\"}\r\n                  className=\"whitespace-nowrap\"\r\n                >\r\n                  {product.stock <= product.minStock / 3 ? \"Crítico\" : \"Baixo\"}\r\n                </Badge>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,kDAAkD;AAClD,MAAM,mBAAmB;IACvB;QACE,IAAI;QACJ,MAAM;QACN,UAAU;QACV,OAAO;QACP,OAAO;QACP,UAAU;IACZ;IACA;QACE,IAAI;QACJ,MAAM;QACN,UAAU;QACV,OAAO;QACP,OAAO;QACP,UAAU;IACZ;IACA;QACE,IAAI;QACJ,MAAM;QACN,UAAU;QACV,OAAO;QACP,OAAO;QACP,UAAU;IACZ;IACA;QACE,IAAI;QACJ,MAAM;QACN,UAAU;QACV,OAAO;QACP,OAAO;QACP,UAAU;IACZ;IACA;QACE,IAAI;QACJ,MAAM;QACN,UAAU;QACV,OAAO;QACP,OAAO;QACP,UAAU;IACZ;CACD;AAEM,SAAS;IACd,qBACE,8OAAC;;0BACC,8OAAC;gBAAG,WAAU;0BAA2B;;;;;;0BACzC,8OAAC,0HAAA,CAAA,QAAK;;kCACJ,8OAAC,0HAAA,CAAA,cAAW;kCACV,cAAA,8OAAC,0HAAA,CAAA,WAAQ;;8CACP,8OAAC,0HAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,0HAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,0HAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,0HAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,0HAAA,CAAA,YAAS;8CAAC;;;;;;;;;;;;;;;;;kCAGf,8OAAC,0HAAA,CAAA,YAAS;kCACP,iBAAiB,GAAG,CAAC,CAAC,wBACrB,8OAAC,0HAAA,CAAA,WAAQ;;kDACP,8OAAC,0HAAA,CAAA,YAAS;wCAAC,WAAU;kDAAe,QAAQ,IAAI;;;;;;kDAChD,8OAAC,0HAAA,CAAA,YAAS;kDAAE,QAAQ,QAAQ;;;;;;kDAC5B,8OAAC,0HAAA,CAAA,YAAS;kDACP,IAAI,KAAK,YAAY,CAAC,SAAS;4CAC9B,OAAO;4CACP,UAAU;wCACZ,GAAG,MAAM,CAAC,QAAQ,KAAK;;;;;;kDAEzB,8OAAC,0HAAA,CAAA,YAAS;kDAAE,QAAQ,KAAK;;;;;;kDACzB,8OAAC,0HAAA,CAAA,YAAS;kDACR,cAAA,8OAAC,0HAAA,CAAA,QAAK;4CACJ,SAAS,QAAQ,KAAK,IAAI,QAAQ,QAAQ,GAAG,IAAI,gBAAgB;4CACjE,WAAU;sDAET,QAAQ,KAAK,IAAI,QAAQ,QAAQ,GAAG,IAAI,YAAY;;;;;;;;;;;;+BAf5C,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;AAwBrC","debugId":null}},
    {"offset": {"line": 1408, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/services/api.tsx"],"sourcesContent":["import axios from \"axios\"\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.NEXT_PUBLIC_API_URL,\r\n})\r\n\r\nexport const produtoService = {\r\n  listarProdutos: async () => {\r\n    const response = await api.get(\"/produtos\")\r\n    return response.data\r\n  },\r\n\r\n  buscarProduto: async (id: number) => {\r\n    const response = await api.get(`/produtos/${id}`)\r\n    return response.data\r\n  },\r\n\r\n  criarProduto: async (produto: any) => {\r\n    const response = await api.post(\"/produtos\", produto)\r\n    return response.data\r\n  },\r\n\r\n  atualizarProduto: async (id: number, produto: any) => {\r\n    const response = await api.put(`/produtos/${id}`, produto)\r\n    return response.data\r\n  },\r\n\r\n  removerProduto: async (id: number) => {\r\n    await api.delete(`/produtos/${id}`)\r\n  },\r\n}\r\n\r\n// Adicione serviços similares para outros recursos (usuários, vendas, etc.)\r\n\r\nexport default api\r\n\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,OAAO;AACT;AAEO,MAAM,iBAAiB;IAC5B,gBAAgB;QACd,MAAM,WAAW,MAAM,IAAI,GAAG,CAAC;QAC/B,OAAO,SAAS,IAAI;IACtB;IAEA,eAAe,OAAO;QACpB,MAAM,WAAW,MAAM,IAAI,GAAG,CAAC,CAAC,UAAU,EAAE,IAAI;QAChD,OAAO,SAAS,IAAI;IACtB;IAEA,cAAc,OAAO;QACnB,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,aAAa;QAC7C,OAAO,SAAS,IAAI;IACtB;IAEA,kBAAkB,OAAO,IAAY;QACnC,MAAM,WAAW,MAAM,IAAI,GAAG,CAAC,CAAC,UAAU,EAAE,IAAI,EAAE;QAClD,OAAO,SAAS,IAAI;IACtB;IAEA,gBAAgB,OAAO;QACrB,MAAM,IAAI,MAAM,CAAC,CAAC,UAAU,EAAE,IAAI;IACpC;AACF;uCAIe","debugId":null}},
    {"offset": {"line": 1445, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/services/filaService.ts"],"sourcesContent":["import api from \"./api\"\r\nimport type { Cliente, Atendimento } from \"@/types/fila\"\r\n\r\nexport const filaService = {\r\n  async getClientesNaFila(): Promise<Cliente[]> {\r\n    try {\r\n      const response = await api.get(\"/fila/clientes\")\r\n      return response.data\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar clientes na fila:\", error)\r\n      return []\r\n    }\r\n  },\r\n\r\n  async getClientesEmAtendimento(): Promise<Atendimento[]> {\r\n    try {\r\n      const response = await api.get(\"/fila/atendimentos\")\r\n      return response.data\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar clientes em atendimento:\", error)\r\n      return []\r\n    }\r\n  },\r\n\r\n  async adicionarClienteNaFila(cliente: Omit<Cliente, \"id\" | \"chegada\" | \"espera\">): Promise<Cliente> {\r\n    try {\r\n      const response = await api.post(\"/fila/adicionar\", cliente)\r\n      return response.data\r\n    } catch (error) {\r\n      console.error(\"Erro ao adicionar cliente na fila:\", error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  async iniciarAtendimento(id: number, atendente = \"Atendente\"): Promise<Atendimento> {\r\n    try {\r\n      const response = await api.post(`/fila/atender/${id}?atendente=${atendente}`)\r\n      return response.data\r\n    } catch (error) {\r\n      console.error(\"Erro ao iniciar atendimento:\", error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  async finalizarAtendimento(id: number): Promise<void> {\r\n    try {\r\n      await api.post(`/fila/finalizar/${id}/`)\r\n    } catch (error) {\r\n      console.error(\"Erro ao finalizar atendimento:\", error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  async removerClienteDaFila(id: number): Promise<void> {\r\n    try {\r\n      await api.delete(`/fila/${id}`)\r\n    } catch (error) {\r\n      console.error(\"Erro ao remover cliente da fila:\", error)\r\n      throw error\r\n    }\r\n  },\r\n}\r\n\r\nexport default filaService\r\n\r\n"],"names":[],"mappings":";;;;AAAA;;AAGO,MAAM,cAAc;IACzB,MAAM;QACJ,IAAI;YACF,MAAM,WAAW,MAAM,gHAAA,CAAA,UAAG,CAAC,GAAG,CAAC;YAC/B,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,oCAAoC;YAClD,OAAO,EAAE;QACX;IACF;IAEA,MAAM;QACJ,IAAI;YACF,MAAM,WAAW,MAAM,gHAAA,CAAA,UAAG,CAAC,GAAG,CAAC;YAC/B,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2CAA2C;YACzD,OAAO,EAAE;QACX;IACF;IAEA,MAAM,wBAAuB,OAAmD;QAC9E,IAAI;YACF,MAAM,WAAW,MAAM,gHAAA,CAAA,UAAG,CAAC,IAAI,CAAC,mBAAmB;YACnD,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sCAAsC;YACpD,MAAM;QACR;IACF;IAEA,MAAM,oBAAmB,EAAU,EAAE,YAAY,WAAW;QAC1D,IAAI;YACF,MAAM,WAAW,MAAM,gHAAA,CAAA,UAAG,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,GAAG,WAAW,EAAE,WAAW;YAC5E,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,MAAM;QACR;IACF;IAEA,MAAM,sBAAqB,EAAU;QACnC,IAAI;YACF,MAAM,gHAAA,CAAA,UAAG,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;QACzC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;YAChD,MAAM;QACR;IACF;IAEA,MAAM,sBAAqB,EAAU;QACnC,IAAI;YACF,MAAM,gHAAA,CAAA,UAAG,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI;QAChC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,oCAAoC;YAClD,MAAM;QACR;IACF;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 1512, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/dashboard/service-queue.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { format, formatDistanceToNow } from \"date-fns\"\r\nimport { ptBR } from \"date-fns/locale\"\r\nimport { filaService } from \"@/services/filaService\"\r\nimport type { Cliente, Atendimento } from \"@/types/fila\"\r\n\r\nexport function ServiceQueue() {\r\n  const [clientesNaFila, setClientesNaFila] = useState<Cliente[]>([])\r\n  const [clientesEmAtendimento, setClientesEmAtendimento] = useState<Atendimento[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true)\r\n        // Buscar clientes na fila e em atendimento usando o serviço existente\r\n        const [fila, atendimento] = await Promise.all([\r\n          filaService.getClientesNaFila(),\r\n          filaService.getClientesEmAtendimento(),\r\n        ])\r\n        setClientesNaFila(fila)\r\n        setClientesEmAtendimento(atendimento)\r\n      } catch (error) {\r\n        console.error(\"Erro ao carregar dados da fila:\", error)\r\n        // Usar dados mockados em caso de erro\r\n        setClientesNaFila([\r\n          {\r\n            id: 1,\r\n            nome: \"Roberto Almeida\",\r\n            servico: \"Troca de Óleo\",\r\n            chegada: new Date().toISOString(),\r\n            prioridade: \"normal\",\r\n          },\r\n        ])\r\n        setClientesEmAtendimento([\r\n          {\r\n            id: 2,\r\n            nome: \"Fernanda Lima\",\r\n            servico: \"Revisão Completa\",\r\n            inicio: new Date(Date.now() - 30 * 60000).toISOString(),\r\n            atendente: \"Carlos Silva\",\r\n            status: \"em_atendimento\",\r\n          },\r\n        ])\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n    // Atualizar a cada 30 segundos\r\n    const interval = setInterval(fetchData, 30000)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  // Função para formatar a hora de chegada\r\n  const formatArrivalTime = (dateString: string) => {\r\n    try {\r\n      const date = new Date(dateString)\r\n      return format(date, \"HH:mm\", { locale: ptBR })\r\n    } catch (error) {\r\n      return \"--:--\"\r\n    }\r\n  }\r\n\r\n  // Função para calcular o tempo de espera\r\n  const calculateWaitingTime = (dateString: string) => {\r\n    try {\r\n      return formatDistanceToNow(new Date(dateString), {\r\n        locale: ptBR,\r\n        addSuffix: false,\r\n      })\r\n    } catch (error) {\r\n      return \"--\"\r\n    }\r\n  }\r\n\r\n  // Combinar clientes na fila e em atendimento para exibição\r\n  const allClients = [\r\n    ...clientesNaFila.map((cliente) => ({\r\n      id: cliente.id,\r\n      nome: cliente.nome,\r\n      servico: cliente.servico,\r\n      chegada: cliente.chegada,\r\n      status: \"waiting\" as const,\r\n      prioridade: cliente.prioridade,\r\n    })),\r\n    ...clientesEmAtendimento.map((atendimento) => ({\r\n      id: atendimento.id,\r\n      nome: atendimento.nome,\r\n      servico: atendimento.servico,\r\n      chegada: atendimento.inicio,\r\n      status: \"in_service\" as const,\r\n      prioridade: \"normal\" as const, // Assumindo prioridade normal para atendimentos em andamento\r\n    })),\r\n  ]\r\n\r\n  if (loading && allClients.length === 0) {\r\n    return <div className=\"flex justify-center p-4\">Carregando fila de atendimento...</div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-lg font-medium mb-4\">Clientes na Fila</h3>\r\n      <Table>\r\n        <TableHeader>\r\n          <TableRow>\r\n            <TableHead>Cliente</TableHead>\r\n            <TableHead>Serviço</TableHead>\r\n            <TableHead>Chegada</TableHead>\r\n            <TableHead>Espera</TableHead>\r\n            <TableHead>Status</TableHead>\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {allClients.length > 0 ? (\r\n            allClients.map((item) => (\r\n              <TableRow key={item.id}>\r\n                <TableCell className=\"font-medium\">{item.nome}</TableCell>\r\n                <TableCell>{item.servico}</TableCell>\r\n                <TableCell>{formatArrivalTime(item.chegada)}</TableCell>\r\n                <TableCell>{calculateWaitingTime(item.chegada)}</TableCell>\r\n                <TableCell>\r\n                  <Badge\r\n                    variant={item.status === \"waiting\" ? \"outline\" : \"secondary\"}\r\n                    className={`whitespace-nowrap ${item.prioridade === \"alta\" ? \"border-amber-500 text-amber-500\" : \"\"}`}\r\n                  >\r\n                    {item.status === \"waiting\" ? \"Aguardando\" : \"Em Atendimento\"}\r\n                  </Badge>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          ) : (\r\n            <TableRow>\r\n              <TableCell colSpan={5} className=\"text-center py-4\">\r\n                Não há clientes na fila no momento\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1780, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/app/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport { DollarSign, Users, Package, ClipboardList, ArrowUpRight, ArrowDownRight } from \"lucide-react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Overview } from \"@/components/dashboard/overview\"\r\nimport { RecentSales } from \"@/components/dashboard/recent-sales\"\r\nimport { InventoryStatus } from \"@/components/dashboard/inventory-status\"\r\nimport { ServiceQueue } from \"@/components/dashboard/service-queue\"\r\nimport { useToast } from \"@/components/ui/use-toast\"\r\nimport { dashboardService, type DashboardData } from \"@/services/dashboardService\"\r\n\r\n// Dados mockados como fallback\r\nconst mockData = {\r\n  totalSales: 12890.75,\r\n  salesGrowth: 14.5,\r\n  totalCustomers: 342,\r\n  customersGrowth: 7.2,\r\n  totalProducts: 189,\r\n  lowStockProducts: 12,\r\n  queueWaiting: 8,\r\n  queueInService: 3,\r\n}\r\n\r\nexport default function DashboardPage() {\r\n  const [data, setData] = useState<DashboardData>(mockData)\r\n  const [loading, setLoading] = useState(true)\r\n  const { toast } = useToast()\r\n\r\n  const fetchDashboardData = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const dashboardData = await dashboardService.getDashboardData()\r\n      setData(dashboardData)\r\n    } catch (error) {\r\n      console.error(\"Erro ao carregar dados do dashboard:\", error)\r\n      toast({\r\n        title: \"Erro ao carregar dados\",\r\n        description: \"Não foi possível carregar os dados do dashboard. Usando dados de exemplo.\",\r\n        variant: \"destructive\",\r\n      })\r\n      // Fallback para dados mockados em caso de erro\r\n      setData(mockData)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchDashboardData()\r\n  }, [toast])\r\n\r\n  const handleRefresh = () => {\r\n    fetchDashboardData()\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-1 space-y-4 p-4 md:p-8 pt-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <h2 className=\"text-3xl font-bold tracking-tight\">Dashboard</h2>\r\n        <div className=\"flex items-center gap-2\">\r\n          <Button variant=\"outline\">Download Relatório</Button>\r\n          <Button onClick={handleRefresh}>{loading ? \"Atualizando...\" : \"Atualizar Dados\"}</Button>\r\n        </div>\r\n      </div>\r\n\r\n      <Tabs defaultValue=\"overview\" className=\"space-y-4\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"overview\">Visão Geral</TabsTrigger>\r\n          <TabsTrigger value=\"sales\">Vendas</TabsTrigger>\r\n          <TabsTrigger value=\"inventory\">Estoque</TabsTrigger>\r\n          <TabsTrigger value=\"queue\">Fila</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"overview\" className=\"space-y-4\">\r\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Vendas Totais</CardTitle>\r\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">\r\n                  {loading ? \"...\" : `R$ ${data.totalSales.toLocaleString(\"pt-BR\", { minimumFractionDigits: 2 })}`}\r\n                </div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  {data.salesGrowth > 0 ? (\r\n                    <span className=\"flex items-center text-green-600\">\r\n                      <ArrowUpRight className=\"mr-1 h-4 w-4\" />+{data.salesGrowth}% em relação ao mês anterior\r\n                    </span>\r\n                  ) : (\r\n                    <span className=\"flex items-center text-red-600\">\r\n                      <ArrowDownRight className=\"mr-1 h-4 w-4\" />\r\n                      {data.salesGrowth}% em relação ao mês anterior\r\n                    </span>\r\n                  )}\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Clientes</CardTitle>\r\n                <Users className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{loading ? \"...\" : data.totalCustomers}</div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  {data.customersGrowth > 0 ? (\r\n                    <span className=\"flex items-center text-green-600\">\r\n                      <ArrowUpRight className=\"mr-1 h-4 w-4\" />+{data.customersGrowth}% em relação ao mês anterior\r\n                    </span>\r\n                  ) : (\r\n                    <span className=\"flex items-center text-red-600\">\r\n                      <ArrowDownRight className=\"mr-1 h-4 w-4\" />\r\n                      {data.customersGrowth}% em relação ao mês anterior\r\n                    </span>\r\n                  )}\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Produtos</CardTitle>\r\n                <Package className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{loading ? \"...\" : data.totalProducts}</div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  <span className={data.lowStockProducts > 10 ? \"text-amber-600\" : \"text-muted-foreground\"}>\r\n                    {data.lowStockProducts} produtos com estoque baixo\r\n                  </span>\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Fila de Atendimento</CardTitle>\r\n                <ClipboardList className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{loading ? \"...\" : data.queueWaiting + data.queueInService}</div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  {data.queueWaiting} aguardando, {data.queueInService} em atendimento\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\">\r\n            <Card className=\"col-span-4\">\r\n              <CardHeader>\r\n                <CardTitle>Visão Geral</CardTitle>\r\n                <CardDescription>Vendas mensais do ano atual</CardDescription>\r\n              </CardHeader>\r\n              <CardContent className=\"pl-2\">\r\n                <Overview />\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card className=\"col-span-3\">\r\n              <CardHeader>\r\n                <CardTitle>Vendas Recentes</CardTitle>\r\n                <CardDescription>Últimas 5 vendas realizadas</CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <RecentSales />\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"sales\" className=\"space-y-4\">\r\n          <Card className=\"col-span-4\">\r\n            <CardHeader>\r\n              <CardTitle>Vendas Detalhadas</CardTitle>\r\n              <CardDescription>Análise detalhada de vendas por período</CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"pl-2\">\r\n              <Overview />\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"inventory\" className=\"space-y-4\">\r\n          <Card className=\"col-span-4\">\r\n            <CardHeader>\r\n              <CardTitle>Status do Estoque</CardTitle>\r\n              <CardDescription>Produtos com estoque baixo e mais vendidos</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <InventoryStatus />\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"queue\" className=\"space-y-4\">\r\n          <Card className=\"col-span-4\">\r\n            <CardHeader>\r\n              <CardTitle>Fila de Atendimento</CardTitle>\r\n              <CardDescription>Clientes aguardando e em atendimento</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ServiceQueue />\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}