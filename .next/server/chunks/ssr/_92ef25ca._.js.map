{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\"flex flex-col gap-1.5 px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,0BAA0B;QACvC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\r\n        outline:\r\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,8cACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/alert.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst alertVariants = cva(\r\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-background text-foreground\",\r\n        destructive: \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  },\r\n)\r\n\r\nconst Alert = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\r\n>(({ className, variant, ...props }, ref) => (\r\n  <div ref={ref} role=\"alert\" className={cn(alertVariants({ variant }), className)} {...props} />\r\n))\r\nAlert.displayName = \"Alert\"\r\n\r\nconst AlertTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(\r\n  ({ className, ...props }, ref) => (\r\n    <h5 ref={ref} className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)} {...props} />\r\n  ),\r\n)\r\nAlertTitle.displayName = \"AlertTitle\"\r\n\r\nconst AlertDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\r\n  ({ className, ...props }, ref) => (\r\n    <div ref={ref} className={cn(\"text-sm [&_p]:leading-relaxed\", className)} {...props} />\r\n  ),\r\n)\r\nAlertDescription.displayName = \"AlertDescription\"\r\n\r\nexport { Alert, AlertTitle, AlertDescription }\r\n\r\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;QACf;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QAAI,KAAK;QAAK,MAAK;QAAQ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAE7F,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAChC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAG,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAAa,GAAG,KAAK;;;;;;AAGrG,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EACtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAAa,GAAG,KAAK;;;;;;AAGvF,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Tabs({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\r\n  return (\r\n    <TabsPrimitive.Root\r\n      data-slot=\"tabs\"\r\n      className={cn(\"flex flex-col gap-2\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TabsList({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\r\n  return (\r\n    <TabsPrimitive.List\r\n      data-slot=\"tabs-list\"\r\n      className={cn(\r\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-1\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TabsTrigger({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\r\n  return (\r\n    <TabsPrimitive.Trigger\r\n      data-slot=\"tabs-trigger\"\r\n      className={cn(\r\n        \"data-[state=active]:bg-background data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring inline-flex flex-1 items-center justify-center gap-1.5 rounded-md px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TabsContent({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\r\n  return (\r\n    <TabsPrimitive.Content\r\n      data-slot=\"tabs-content\"\r\n      className={cn(\"flex-1 outline-none\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2fACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\r\n  return (\r\n    <input\r\n      type={type}\r\n      data-slot=\"input\"\r\n      className={cn(\r\n        \"border-input file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\r\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kbACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Label({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\r\n  return (\r\n    <LabelPrimitive.Root\r\n      data-slot=\"label\"\r\n      className={cn(\r\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/app/diagnostico-avancado/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Alert, AlertDescription } from \"@/components/ui/alert\"\r\nimport { AlertCircle, CheckCircle, RefreshCw } from \"lucide-react\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\n\r\nexport default function DiagnosticoAvancadoPage() {\r\n  const [token, setToken] = useState<string | null>(null)\r\n  const [tokenValido, setTokenValido] = useState<boolean | null>(null)\r\n  const [tokenInfo, setTokenInfo] = useState<any>(null)\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [testResults, setTestResults] = useState<Array<{ rota: string; status: string; mensagem: string }>>([])\r\n  const [novoToken, setNovoToken] = useState(\"\")\r\n  const [prefixo, setPrefixo] = useState(\"Bearer \")\r\n  const [apiBaseUrl, setApiBaseUrl] = useState(\"\")\r\n  const [userData, setUserData] = useState<any>(null)\r\n  const [customRoute, setCustomRoute] = useState(\"/usuarios\")\r\n  const [customMethod, setCustomMethod] = useState(\"GET\")\r\n  const [customBody, setCustomBody] = useState(\"\")\r\n\r\n  // Carregar token e API base URL ao montar o componente\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem(\"token\")\r\n    setToken(storedToken)\r\n\r\n    // Obter a URL base da API\r\n    const baseUrl = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8080/sistema-gestao/api\"\r\n    setApiBaseUrl(baseUrl)\r\n    console.log(\"API Base URL:\", baseUrl)\r\n\r\n    // Carregar dados do usuário\r\n    const storedUser = localStorage.getItem(\"user\")\r\n    if (storedUser) {\r\n      try {\r\n        const parsedUser = JSON.parse(storedUser)\r\n        setUserData(parsedUser)\r\n      } catch (err) {\r\n        console.error(\"Erro ao analisar dados do usuário:\", err)\r\n      }\r\n    }\r\n\r\n    if (storedToken) {\r\n      try {\r\n        // Decodificar o token (sem verificar a assinatura)\r\n        const tokenParts = storedToken.split(\".\")\r\n        if (tokenParts.length === 3) {\r\n          const payload = JSON.parse(atob(tokenParts[1]))\r\n          setTokenInfo(payload)\r\n          setTokenValido(true)\r\n        } else {\r\n          setTokenValido(false)\r\n          setError(\"Token não está no formato JWT válido (deve ter 3 partes separadas por pontos)\")\r\n        }\r\n      } catch (err) {\r\n        setTokenValido(false)\r\n        setError(\"Erro ao decodificar token: \" + (err instanceof Error ? err.message : String(err)))\r\n      }\r\n    } else {\r\n      setTokenValido(false)\r\n      setError(\"Token não encontrado no localStorage\")\r\n    }\r\n  }, [])\r\n\r\n  // Função para testar uma rota\r\n  const testarRota = async (rota: string, metodo = \"GET\", dados: any = null) => {\r\n    if (!token) {\r\n      return { status: \"erro\", mensagem: \"Token não disponível\" }\r\n    }\r\n\r\n    try {\r\n      // Usar a URL base da API sem adicionar /api/ novamente\r\n      const url = `${apiBaseUrl}${rota.startsWith(\"/\") ? rota : \"/\" + rota}`\r\n\r\n      const config = {\r\n        method: metodo,\r\n        url,\r\n        headers: {\r\n          Authorization: `${prefixo}${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data: dados,\r\n      }\r\n\r\n      console.log(`Testando ${metodo} ${url} com token:`, `${prefixo}${token.substring(0, 20)}...`)\r\n      console.log(\"Cabeçalhos:\", config.headers)\r\n      if (dados) console.log(\"Dados:\", dados)\r\n\r\n      const response = await axios(config)\r\n      return {\r\n        status: \"sucesso\",\r\n        mensagem: `Status: ${response.status} ${response.statusText}`,\r\n        data: response.data,\r\n      }\r\n    } catch (err: any) {\r\n      console.error(`Erro ao testar ${metodo} ${rota}:`, err)\r\n      return {\r\n        status: \"erro\",\r\n        mensagem: err.response ? `Erro ${err.response.status}: ${err.response.statusText}` : `Erro: ${err.message}`,\r\n        error: err,\r\n      }\r\n    }\r\n  }\r\n\r\n  // Função para testar todas as rotas\r\n  const testarRotas = async () => {\r\n    setLoading(true)\r\n    setTestResults([])\r\n\r\n    // Rotas sem o prefixo /api/ pois já está na URL base\r\n    const rotas = [\r\n      { rota: \"/auth/me\", metodo: \"GET\" },\r\n      { rota: \"/auth/refresh\", metodo: \"GET\" },\r\n      { rota: \"/usuarios\", metodo: \"GET\" },\r\n      {\r\n        rota: \"/usuarios\",\r\n        metodo: \"POST\",\r\n        dados: {\r\n          username: \"teste_\" + Date.now(),\r\n          nome: \"Usuário de Teste\",\r\n          senha: \"senha123\",\r\n          cargo: \"Tester\",\r\n          perfil: \"Operador\",\r\n          status: \"Ativo\",\r\n        },\r\n      },\r\n    ]\r\n\r\n    const resultados = []\r\n\r\n    for (const { rota, metodo, dados } of rotas) {\r\n      const resultado = await testarRota(rota, metodo, dados)\r\n      resultados.push({\r\n        rota: `${metodo} ${rota}`,\r\n        status: resultado.status,\r\n        mensagem: resultado.mensagem,\r\n        data: resultado.data,\r\n        error: resultado.error,\r\n      })\r\n    }\r\n\r\n    setTestResults(resultados)\r\n    setLoading(false)\r\n  }\r\n\r\n  // Função para testar uma rota personalizada\r\n  const testarRotaPersonalizada = async () => {\r\n    setLoading(true)\r\n    let dados = null\r\n\r\n    if (customBody.trim()) {\r\n      try {\r\n        dados = JSON.parse(customBody)\r\n      } catch (err) {\r\n        setTestResults([\r\n          {\r\n            rota: `${customMethod} ${customRoute}`,\r\n            status: \"erro\",\r\n            mensagem: \"Erro ao analisar o corpo da requisição: JSON inválido\",\r\n          },\r\n        ])\r\n        setLoading(false)\r\n        return\r\n      }\r\n    }\r\n\r\n    const resultado = await testarRota(customRoute, customMethod, dados)\r\n    setTestResults([\r\n      {\r\n        rota: `${customMethod} ${customRoute}`,\r\n        status: resultado.status,\r\n        mensagem: resultado.mensagem,\r\n        data: resultado.data,\r\n        error: resultado.error,\r\n      },\r\n    ])\r\n    setLoading(false)\r\n  }\r\n\r\n  // Função para salvar um novo token\r\n  const salvarNovoToken = () => {\r\n    if (novoToken) {\r\n      localStorage.setItem(\"token\", novoToken)\r\n      window.location.reload()\r\n    }\r\n  }\r\n\r\n  // Função para testar com diferentes prefixos\r\n  const testarComDiferentesPrefixos = async () => {\r\n    setLoading(true)\r\n    setTestResults([])\r\n\r\n    const prefixos = [\"Bearer \", \"\", \"Token \", \"JWT \"]\r\n    const resultados = []\r\n\r\n    for (const prefix of prefixos) {\r\n      setPrefixo(prefix)\r\n      const resultado = await testarRota(\"/usuarios\", \"GET\")\r\n      resultados.push({\r\n        rota: `GET /usuarios com prefixo \"${prefix}\"`,\r\n        status: resultado.status,\r\n        mensagem: resultado.mensagem,\r\n      })\r\n    }\r\n\r\n    setPrefixo(\"Bearer \")\r\n    setTestResults(resultados)\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-8\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Diagnóstico Avançado</h1>\r\n\r\n      <div className=\"grid gap-6\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Status do Token</CardTitle>\r\n            <CardDescription>Informações sobre o token armazenado</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            {token ? (\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <span className=\"font-semibold\">Status:</span>\r\n                  {tokenValido === true ? (\r\n                    <span className=\"text-green-600 flex items-center\">\r\n                      <CheckCircle className=\"h-4 w-4 mr-1\" /> Válido\r\n                    </span>\r\n                  ) : tokenValido === false ? (\r\n                    <span className=\"text-red-600 flex items-center\">\r\n                      <AlertCircle className=\"h-4 w-4 mr-1\" /> Inválido\r\n                    </span>\r\n                  ) : (\r\n                    <span>Verificando...</span>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <span className=\"font-semibold\">Token:</span>\r\n                  <div className=\"mt-1 p-2 bg-gray-100 rounded text-xs overflow-auto max-h-20\">{token}</div>\r\n                </div>\r\n\r\n                {tokenInfo && (\r\n                  <div>\r\n                    <span className=\"font-semibold\">Informações do Token:</span>\r\n                    <pre className=\"mt-1 p-2 bg-gray-100 rounded text-xs overflow-auto max-h-60\">\r\n                      {JSON.stringify(tokenInfo, null, 2)}\r\n                    </pre>\r\n                  </div>\r\n                )}\r\n\r\n                <div>\r\n                  <span className=\"font-semibold\">API Base URL:</span>\r\n                  <div className=\"mt-1 p-2 bg-gray-100 rounded text-xs overflow-auto\">{apiBaseUrl}</div>\r\n                </div>\r\n\r\n                {userData && (\r\n                  <div>\r\n                    <span className=\"font-semibold\">Dados do Usuário:</span>\r\n                    <pre className=\"mt-1 p-2 bg-gray-100 rounded text-xs overflow-auto max-h-60\">\r\n                      {JSON.stringify(userData, null, 2)}\r\n                    </pre>\r\n                  </div>\r\n                )}\r\n\r\n                {error && (\r\n                  <Alert variant=\"destructive\">\r\n                    <AlertCircle className=\"h-4 w-4\" />\r\n                    <AlertDescription>{error}</AlertDescription>\r\n                  </Alert>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <Alert variant=\"destructive\">\r\n                <AlertCircle className=\"h-4 w-4\" />\r\n                <AlertDescription>Token não encontrado no localStorage</AlertDescription>\r\n              </Alert>\r\n            )}\r\n          </CardContent>\r\n          <CardFooter>\r\n            <Button\r\n              onClick={() => {\r\n                localStorage.removeItem(\"token\")\r\n                localStorage.removeItem(\"user\")\r\n                window.location.reload()\r\n              }}\r\n              variant=\"outline\"\r\n              className=\"mr-2\"\r\n            >\r\n              Limpar Token\r\n            </Button>\r\n            <Button onClick={() => window.location.reload()}>Recarregar</Button>\r\n          </CardFooter>\r\n        </Card>\r\n\r\n        <Tabs defaultValue=\"testes\">\r\n          <TabsList className=\"mb-4\">\r\n            <TabsTrigger value=\"testes\">Testes de Rotas</TabsTrigger>\r\n            <TabsTrigger value=\"personalizado\">Teste Personalizado</TabsTrigger>\r\n            <TabsTrigger value=\"prefixos\">Testar Prefixos</TabsTrigger>\r\n            <TabsTrigger value=\"token\">Gerenciar Token</TabsTrigger>\r\n          </TabsList>\r\n\r\n          <TabsContent value=\"testes\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Teste de Rotas</CardTitle>\r\n                <CardDescription>Teste as rotas da API com o token atual</CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"mb-4\">\r\n                  <Label htmlFor=\"prefixo\">Prefixo do Token:</Label>\r\n                  <Input id=\"prefixo\" value={prefixo} onChange={(e) => setPrefixo(e.target.value)} className=\"mt-1\" />\r\n                  <p className=\"text-sm text-gray-500 mt-1\">Exemplo: \"Bearer \" (com espaço), \"\", \"Token \", etc.</p>\r\n                </div>\r\n\r\n                <Button onClick={testarRotas} disabled={loading || !token}>\r\n                  {loading ? (\r\n                    <>\r\n                      <RefreshCw className=\"mr-2 h-4 w-4 animate-spin\" /> Testando...\r\n                    </>\r\n                  ) : (\r\n                    \"Testar Rotas\"\r\n                  )}\r\n                </Button>\r\n\r\n                {testResults.length > 0 && (\r\n                  <div className=\"mt-4\">\r\n                    <h3 className=\"text-lg font-semibold mb-2\">Resultados:</h3>\r\n                    <div className=\"space-y-2\">\r\n                      {testResults.map((result, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className={`p-3 rounded ${result.status === \"sucesso\" ? \"bg-green-100\" : \"bg-red-100\"}`}\r\n                        >\r\n                          <div className=\"font-medium\">{result.rota}</div>\r\n                          <div className={`text-sm ${result.status === \"sucesso\" ? \"text-green-700\" : \"text-red-700\"}`}>\r\n                            {result.mensagem}\r\n                          </div>\r\n                          {result.data && (\r\n                            <div className=\"mt-2\">\r\n                              <details>\r\n                                <summary className=\"cursor-pointer text-sm font-medium\">Ver resposta</summary>\r\n                                <pre className=\"mt-1 p-2 bg-gray-50 rounded text-xs overflow-auto max-h-40\">\r\n                                  {JSON.stringify(result.data, null, 2)}\r\n                                </pre>\r\n                              </details>\r\n                            </div>\r\n                          )}\r\n                          {result.error && (\r\n                            <div className=\"mt-2\">\r\n                              <details>\r\n                                <summary className=\"cursor-pointer text-sm font-medium\">Ver detalhes do erro</summary>\r\n                                <pre className=\"mt-1 p-2 bg-gray-50 rounded text-xs overflow-auto max-h-40\">\r\n                                  {JSON.stringify(\r\n                                    {\r\n                                      message: result.error.message,\r\n                                      response: result.error.response\r\n                                        ? {\r\n                                            status: result.error.response.status,\r\n                                            statusText: result.error.response.statusText,\r\n                                            data: result.error.response.data,\r\n                                          }\r\n                                        : null,\r\n                                    },\r\n                                    null,\r\n                                    2,\r\n                                  )}\r\n                                </pre>\r\n                              </details>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"personalizado\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Teste Personalizado</CardTitle>\r\n                <CardDescription>Teste uma rota específica com parâmetros personalizados</CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <Label htmlFor=\"custom-route\">Rota:</Label>\r\n                      <Input\r\n                        id=\"custom-route\"\r\n                        value={customRoute}\r\n                        onChange={(e) => setCustomRoute(e.target.value)}\r\n                        className=\"mt-1\"\r\n                        placeholder=\"/usuarios\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <Label htmlFor=\"custom-method\">Método:</Label>\r\n                      <select\r\n                        id=\"custom-method\"\r\n                        value={customMethod}\r\n                        onChange={(e) => setCustomMethod(e.target.value)}\r\n                        className=\"mt-1 w-full p-2 border rounded\"\r\n                      >\r\n                        <option value=\"GET\">GET</option>\r\n                        <option value=\"POST\">POST</option>\r\n                        <option value=\"PUT\">PUT</option>\r\n                        <option value=\"DELETE\">DELETE</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label htmlFor=\"custom-body\">Corpo da Requisição (JSON):</Label>\r\n                    <Textarea\r\n                      id=\"custom-body\"\r\n                      value={customBody}\r\n                      onChange={(e) => setCustomBody(e.target.value)}\r\n                      className=\"mt-1 font-mono\"\r\n                      placeholder='{\"key\": \"value\"}'\r\n                      rows={5}\r\n                    />\r\n                    <p className=\"text-sm text-gray-500 mt-1\">Deixe em branco para requisições GET</p>\r\n                  </div>\r\n\r\n                  <Button onClick={testarRotaPersonalizada} disabled={loading || !token}>\r\n                    {loading ? (\r\n                      <>\r\n                        <RefreshCw className=\"mr-2 h-4 w-4 animate-spin\" /> Testando...\r\n                      </>\r\n                    ) : (\r\n                      \"Testar Rota\"\r\n                    )}\r\n                  </Button>\r\n\r\n                  {testResults.length > 0 && (\r\n                    <div className=\"mt-4\">\r\n                      <h3 className=\"text-lg font-semibold mb-2\">Resultados:</h3>\r\n                      <div className=\"space-y-2\">\r\n                        {testResults.map((result, index) => (\r\n                          <div\r\n                            key={index}\r\n                            className={`p-3 rounded ${result.status === \"sucesso\" ? \"bg-green-100\" : \"bg-red-100\"}`}\r\n                          >\r\n                            <div className=\"font-medium\">{result.rota}</div>\r\n                            <div\r\n                              className={`text-sm ${result.status === \"sucesso\" ? \"text-green-700\" : \"text-red-700\"}`}\r\n                            >\r\n                              {result.mensagem}\r\n                            </div>\r\n                            {result.data && (\r\n                              <div className=\"mt-2\">\r\n                                <details>\r\n                                  <summary className=\"cursor-pointer text-sm font-medium\">Ver resposta</summary>\r\n                                  <pre className=\"mt-1 p-2 bg-gray-50 rounded text-xs overflow-auto max-h-40\">\r\n                                    {JSON.stringify(result.data, null, 2)}\r\n                                  </pre>\r\n                                </details>\r\n                              </div>\r\n                            )}\r\n                            {result.error && (\r\n                              <div className=\"mt-2\">\r\n                                <details>\r\n                                  <summary className=\"cursor-pointer text-sm font-medium\">Ver detalhes do erro</summary>\r\n                                  <pre className=\"mt-1 p-2 bg-gray-50 rounded text-xs overflow-auto max-h-40\">\r\n                                    {JSON.stringify(\r\n                                      {\r\n                                        message: result.error.message,\r\n                                        response: result.error.response\r\n                                          ? {\r\n                                              status: result.error.response.status,\r\n                                              statusText: result.error.response.statusText,\r\n                                              data: result.error.response.data,\r\n                                            }\r\n                                          : null,\r\n                                      },\r\n                                      null,\r\n                                      2,\r\n                                    )}\r\n                                  </pre>\r\n                                </details>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"prefixos\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Testar Diferentes Prefixos</CardTitle>\r\n                <CardDescription>Teste a API com diferentes prefixos de token</CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <Button onClick={testarComDiferentesPrefixos} disabled={loading || !token}>\r\n                  {loading ? (\r\n                    <>\r\n                      <RefreshCw className=\"mr-2 h-4 w-4 animate-spin\" /> Testando...\r\n                    </>\r\n                  ) : (\r\n                    \"Testar Prefixos\"\r\n                  )}\r\n                </Button>\r\n\r\n                {testResults.length > 0 && (\r\n                  <div className=\"mt-4\">\r\n                    <h3 className=\"text-lg font-semibold mb-2\">Resultados:</h3>\r\n                    <div className=\"space-y-2\">\r\n                      {testResults.map((result, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className={`p-3 rounded ${result.status === \"sucesso\" ? \"bg-green-100\" : \"bg-red-100\"}`}\r\n                        >\r\n                          <div className=\"font-medium\">{result.rota}</div>\r\n                          <div className={`text-sm ${result.status === \"sucesso\" ? \"text-green-700\" : \"text-red-700\"}`}>\r\n                            {result.mensagem}\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"token\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Gerenciar Token</CardTitle>\r\n                <CardDescription>Atualizar ou substituir o token atual</CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <Label htmlFor=\"novo-token\">Novo Token:</Label>\r\n                    <Input\r\n                      id=\"novo-token\"\r\n                      value={novoToken}\r\n                      onChange={(e) => setNovoToken(e.target.value)}\r\n                      className=\"mt-1\"\r\n                    />\r\n                  </div>\r\n                  <Button onClick={salvarNovoToken} disabled={!novoToken}>\r\n                    Salvar Novo Token\r\n                  </Button>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}