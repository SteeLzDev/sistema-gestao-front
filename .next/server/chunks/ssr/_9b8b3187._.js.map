{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\r\n        outline:\r\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,8cACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\"flex flex-col gap-1.5 px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,0BAA0B;QACvC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Tabs({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\r\n  return (\r\n    <TabsPrimitive.Root\r\n      data-slot=\"tabs\"\r\n      className={cn(\"flex flex-col gap-2\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TabsList({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\r\n  return (\r\n    <TabsPrimitive.List\r\n      data-slot=\"tabs-list\"\r\n      className={cn(\r\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-1\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TabsTrigger({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\r\n  return (\r\n    <TabsPrimitive.Trigger\r\n      data-slot=\"tabs-trigger\"\r\n      className={cn(\r\n        \"data-[state=active]:bg-background data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring inline-flex flex-1 items-center justify-center gap-1.5 rounded-md px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction TabsContent({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\r\n  return (\r\n    <TabsPrimitive.Content\r\n      data-slot=\"tabs-content\"\r\n      className={cn(\"flex-1 outline-none\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2fACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\r\n  return (\r\n    <input\r\n      type={type}\r\n      data-slot=\"input\"\r\n      className={cn(\r\n        \"border-input file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\r\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kbACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Label({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\r\n  return (\r\n    <LabelPrimitive.Root\r\n      data-slot=\"label\"\r\n      className={cn(\r\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Switch = React.forwardRef<\r\n  HTMLInputElement,\r\n  React.InputHTMLAttributes<HTMLInputElement> & {\r\n    onCheckedChange?: (checked: boolean) => void\r\n  }\r\n>(({ className, onCheckedChange, checked, ...props }, ref) => {\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (onCheckedChange) {\r\n      onCheckedChange(event.target.checked)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <label className={cn(\"relative inline-flex items-center cursor-pointer\", className)}>\r\n      <input type=\"checkbox\" className=\"sr-only peer\" ref={ref} checked={checked} onChange={handleChange} {...props} />\r\n      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\r\n    </label>\r\n  )\r\n})\r\nSwitch.displayName = \"Switch\"\r\n\r\nexport { Switch }\r\n\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAK5B,CAAC,EAAE,SAAS,EAAE,eAAe,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACpD,MAAM,eAAe,CAAC;QACpB,IAAI,iBAAiB;YACnB,gBAAgB,MAAM,MAAM,CAAC,OAAO;QACtC;IACF;IAEA,qBACE,8OAAC;QAAM,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,oDAAoD;;0BACvE,8OAAC;gBAAM,MAAK;gBAAW,WAAU;gBAAe,KAAK;gBAAK,SAAS;gBAAS,UAAU;gBAAe,GAAG,KAAK;;;;;;0BAC7G,8OAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB;AACA,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/components/ui/BackButton.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useRouter } from \"next/navigation\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { ArrowLeft } from \"lucide-react\"\r\n\r\ninterface BackButtonProps {\r\n  to?: string\r\n  label?: string\r\n  className?: string\r\n}\r\n\r\nexport const BackButton = ({\r\n  to = \"/dashboard\",\r\n  label = \"Voltar para Dashboard\",\r\n  className = \"\",\r\n}: BackButtonProps) => {\r\n  const router = useRouter()\r\n\r\n  const handleClick = () => {\r\n    router.push(to)\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      variant=\"outline\"\r\n      size=\"sm\"\r\n      onClick={handleClick}\r\n      className={`flex items-center gap-1 ${className}`}\r\n    >\r\n      <ArrowLeft className=\"h-4 w-4\" />\r\n      <span>{label}</span>\r\n    </Button>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAYO,MAAM,aAAa,CAAC,EACzB,KAAK,YAAY,EACjB,QAAQ,uBAAuB,EAC/B,YAAY,EAAE,EACE;IAChB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,cAAc;QAClB,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,8OAAC,2HAAA,CAAA,SAAM;QACL,SAAQ;QACR,MAAK;QACL,SAAS;QACT,WAAW,CAAC,wBAAwB,EAAE,WAAW;;0BAEjD,8OAAC,gNAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;0BACrB,8OAAC;0BAAM;;;;;;;;;;;;AAGb","debugId":null}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/services/cacheServices.ts"],"sourcesContent":["// Serviço para gerenciar cache no localStorage com expiração\r\nconst cacheService = {\r\n    // Armazenar dados no cache com tempo de expiração\r\n    set: <T = any>(key: string, data: T, expiryInMinutes = 30): void => {\r\n      try {\r\n        const item = {\r\n          value: data,\r\n          expiry: new Date().getTime() + expiryInMinutes * 60 * 1000,\r\n        }\r\n        localStorage.setItem(key, JSON.stringify(item))\r\n      } catch (error: any) {\r\n        console.error(`Erro ao armazenar item no cache: ${key}`, error)\r\n      }\r\n    },\r\n  \r\n    // Obter dados do cache, retorna null se expirado ou não existir\r\n    get: <T>(key: string): T | null => {\r\n      try {\r\n        const itemStr = localStorage.getItem(key)\r\n        if (!itemStr) return null\r\n  \r\n        const item = JSON.parse(itemStr)\r\n        const now = new Date().getTime()\r\n  \r\n        // Verificar se o item expirou\r\n        if (now > item.expiry) {\r\n          localStorage.removeItem(key)\r\n          return null\r\n        }\r\n  \r\n        return item.value as T\r\n      } catch (error: any) {\r\n        console.error(`Erro ao recuperar item do cache: ${key}`, error)\r\n        return null\r\n      }\r\n    },\r\n  \r\n    // Remover item do cache\r\n    remove: (key: string): void => {\r\n      try {\r\n        localStorage.removeItem(key)\r\n      } catch (error: any) {\r\n        console.error(`Erro ao remover item do cache: ${key}`, error)\r\n      }\r\n    },\r\n  \r\n    // Limpar todo o cache ou apenas itens com um prefixo específico\r\n    clear: (prefix?: string): void => {\r\n      try {\r\n        if (prefix) {\r\n          // Remover apenas itens com o prefixo especificado\r\n          Object.keys(localStorage).forEach((key) => {\r\n            if (key.startsWith(prefix)) {\r\n              localStorage.removeItem(key)\r\n            }\r\n          })\r\n        } else {\r\n          // Limpar todo o localStorage\r\n          localStorage.clear()\r\n        }\r\n      } catch (error: any) {\r\n        console.error(\"Erro ao limpar cache\", error)\r\n      }\r\n    },\r\n  \r\n    // Verificar se um item existe no cache e não está expirado\r\n    has: (key: string): boolean => {\r\n      try {\r\n        const itemStr = localStorage.getItem(key)\r\n        if (!itemStr) return false\r\n  \r\n        const item = JSON.parse(itemStr)\r\n        const now = new Date().getTime()\r\n  \r\n        return now < item.expiry\r\n      } catch (error: any) {\r\n        console.error(`Erro ao verificar item no cache: ${key}`, error)\r\n        return false\r\n      }\r\n    },\r\n  \r\n    // Atualizar a expiração de um item existente\r\n    updateExpiry: (key: string, expiryInMinutes: number = 30): boolean => {\r\n      try {\r\n        const itemStr = localStorage.getItem(key)\r\n        if (!itemStr) return false\r\n  \r\n        const item = JSON.parse(itemStr)\r\n        item.expiry = new Date().getTime() + expiryInMinutes * 60 * 1000\r\n        localStorage.setItem(key, JSON.stringify(item))\r\n        return true\r\n      } catch (error: any) {\r\n        console.error(`Erro ao atualizar expiração do item no cache: ${key}`, error)\r\n        return false\r\n      }\r\n    },\r\n  }\r\n  \r\n  export default cacheService\r\n  "],"names":[],"mappings":"AAAA,6DAA6D;;;;AAC7D,MAAM,eAAe;IACjB,kDAAkD;IAClD,KAAK,CAAU,KAAa,MAAS,kBAAkB,EAAE;QACvD,IAAI;YACF,MAAM,OAAO;gBACX,OAAO;gBACP,QAAQ,IAAI,OAAO,OAAO,KAAK,kBAAkB,KAAK;YACxD;YACA,aAAa,OAAO,CAAC,KAAK,KAAK,SAAS,CAAC;QAC3C,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,CAAC,iCAAiC,EAAE,KAAK,EAAE;QAC3D;IACF;IAEA,gEAAgE;IAChE,KAAK,CAAI;QACP,IAAI;YACF,MAAM,UAAU,aAAa,OAAO,CAAC;YACrC,IAAI,CAAC,SAAS,OAAO;YAErB,MAAM,OAAO,KAAK,KAAK,CAAC;YACxB,MAAM,MAAM,IAAI,OAAO,OAAO;YAE9B,8BAA8B;YAC9B,IAAI,MAAM,KAAK,MAAM,EAAE;gBACrB,aAAa,UAAU,CAAC;gBACxB,OAAO;YACT;YAEA,OAAO,KAAK,KAAK;QACnB,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,CAAC,iCAAiC,EAAE,KAAK,EAAE;YACzD,OAAO;QACT;IACF;IAEA,wBAAwB;IACxB,QAAQ,CAAC;QACP,IAAI;YACF,aAAa,UAAU,CAAC;QAC1B,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,CAAC,+BAA+B,EAAE,KAAK,EAAE;QACzD;IACF;IAEA,gEAAgE;IAChE,OAAO,CAAC;QACN,IAAI;YACF,IAAI,QAAQ;gBACV,kDAAkD;gBAClD,OAAO,IAAI,CAAC,cAAc,OAAO,CAAC,CAAC;oBACjC,IAAI,IAAI,UAAU,CAAC,SAAS;wBAC1B,aAAa,UAAU,CAAC;oBAC1B;gBACF;YACF,OAAO;gBACL,6BAA6B;gBAC7B,aAAa,KAAK;YACpB;QACF,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,wBAAwB;QACxC;IACF;IAEA,2DAA2D;IAC3D,KAAK,CAAC;QACJ,IAAI;YACF,MAAM,UAAU,aAAa,OAAO,CAAC;YACrC,IAAI,CAAC,SAAS,OAAO;YAErB,MAAM,OAAO,KAAK,KAAK,CAAC;YACxB,MAAM,MAAM,IAAI,OAAO,OAAO;YAE9B,OAAO,MAAM,KAAK,MAAM;QAC1B,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,CAAC,iCAAiC,EAAE,KAAK,EAAE;YACzD,OAAO;QACT;IACF;IAEA,6CAA6C;IAC7C,cAAc,CAAC,KAAa,kBAA0B,EAAE;QACtD,IAAI;YACF,MAAM,UAAU,aAAa,OAAO,CAAC;YACrC,IAAI,CAAC,SAAS,OAAO;YAErB,MAAM,OAAO,KAAK,KAAK,CAAC;YACxB,KAAK,MAAM,GAAG,IAAI,OAAO,OAAO,KAAK,kBAAkB,KAAK;YAC5D,aAAa,OAAO,CAAC,KAAK,KAAK,SAAS,CAAC;YACzC,OAAO;QACT,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,CAAC,8CAA8C,EAAE,KAAK,EAAE;YACtE,OAAO;QACT;IACF;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/services/configService.ts"],"sourcesContent":["\r\nimport cacheService from \"./cacheServices\"\r\nimport toastService from \"./toastService\"\r\n\r\n// Prefixos para o cache\r\nconst CONFIG_CACHE_PREFIX = \"config:\"\r\nconst GENERAL_CONFIG_KEY = `${CONFIG_CACHE_PREFIX}general`\r\nconst DATABASE_CONFIG_KEY = `${CONFIG_CACHE_PREFIX}database`\r\nconst NOTIFICATION_CONFIG_KEY = `${CONFIG_CACHE_PREFIX}notification`\r\nconst SECURITY_CONFIG_KEY = `${CONFIG_CACHE_PREFIX}security`\r\n\r\n// Interfaces para os tipos de configuração\r\nexport interface GeneralConfig {\r\n  companyName: string\r\n  address: string\r\n  phone: string\r\n  email: string\r\n  darkMode: boolean\r\n}\r\n\r\nexport interface DatabaseConfig {\r\n  host: string\r\n  port: string\r\n  database: string\r\n  username: string\r\n  password: string\r\n}\r\n\r\nexport interface NotificationConfig {\r\n  lowStockAlerts: boolean\r\n  salesReports: boolean\r\n  loginAlerts: boolean\r\n  emailNotifications: boolean\r\n}\r\n\r\nexport interface SecurityConfig {\r\n  sessionTimeout: number\r\n  loginAttempts: number\r\n  twoFactorAuth: boolean\r\n  strongPasswordPolicy: boolean\r\n}\r\n\r\n// Valores padrão\r\nconst defaultGeneralConfig: GeneralConfig = {\r\n  companyName: \"Oficina Mecânica\",\r\n  address: \"Rua Exemplo, 123 - Centro\",\r\n  phone: \"(11) 1234-5678\",\r\n  email: \"contato@oficina.com\",\r\n  darkMode: false,\r\n}\r\n\r\nconst defaultDatabaseConfig: DatabaseConfig = {\r\n  host: \"localhost\",\r\n  port: \"5432\",\r\n  database: \"sistema_gestao\",\r\n  username: \"postgres\",\r\n  password: \"\",\r\n}\r\n\r\nconst defaultNotificationConfig: NotificationConfig = {\r\n  lowStockAlerts: true,\r\n  salesReports: true,\r\n  loginAlerts: false,\r\n  emailNotifications: false,\r\n}\r\n\r\nconst defaultSecurityConfig: SecurityConfig = {\r\n  sessionTimeout: 30,\r\n  loginAttempts: 3,\r\n  twoFactorAuth: false,\r\n  strongPasswordPolicy: true,\r\n}\r\n\r\n// Serviço de configuração\r\nconst configService = {\r\n  // Carregar configurações gerais\r\n  loadGeneralConfig: (): GeneralConfig => {\r\n    return cacheService.get<GeneralConfig>(GENERAL_CONFIG_KEY) || defaultGeneralConfig\r\n  },\r\n\r\n  // Salvar configurações gerais\r\n  saveGeneralConfig: async (config: GeneralConfig): Promise<boolean> => {\r\n    try {\r\n      cacheService.set(GENERAL_CONFIG_KEY, config)\r\n      return true\r\n    } catch (error) {\r\n      console.error(\"Erro ao salvar configurações gerais:\", error)\r\n      return false\r\n    }\r\n  },\r\n\r\n  // Carregar configurações de banco de dados\r\n  loadDatabaseConfig: (): DatabaseConfig => {\r\n    return cacheService.get<DatabaseConfig>(DATABASE_CONFIG_KEY) || defaultDatabaseConfig\r\n  },\r\n\r\n  // Salvar configurações de banco de dados\r\n  saveDatabaseConfig: async (config: DatabaseConfig): Promise<boolean> => {\r\n    try {\r\n      cacheService.set(DATABASE_CONFIG_KEY, config)\r\n      return true\r\n    } catch (error) {\r\n      console.error(\"Erro ao salvar configurações de banco de dados:\", error)\r\n      return false\r\n    }\r\n  },\r\n\r\n  // Testar conexão com o banco de dados\r\n  testDatabaseConnection: async (config: DatabaseConfig): Promise<boolean> => {\r\n    try {\r\n      // Simulando um teste de conexão\r\n      await new Promise((resolve) => setTimeout(resolve, 1500))\r\n\r\n      // Simulando sucesso (em um ambiente real, isso faria uma conexão real)\r\n      const success = true\r\n\r\n      if (success) {\r\n        toastService.success(\"Conexão bem-sucedida\", \"A conexão com o banco de dados foi estabelecida com sucesso.\")\r\n        return true\r\n      } else {\r\n        toastService.error(\r\n          \"Falha na conexão\",\r\n          \"Não foi possível conectar ao banco de dados. Verifique as configurações.\",\r\n        )\r\n        return false\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro ao testar conexão:\", error)\r\n      toastService.error(\"Erro de conexão\", \"Ocorreu um erro ao tentar conectar ao banco de dados.\")\r\n      return false\r\n    }\r\n  },\r\n\r\n  // Carregar configurações de notificações\r\n  loadNotificationConfig: (): NotificationConfig => {\r\n    return cacheService.get<NotificationConfig>(NOTIFICATION_CONFIG_KEY) || defaultNotificationConfig\r\n  },\r\n\r\n  // Salvar configurações de notificações\r\n  saveNotificationConfig: async (config: NotificationConfig): Promise<boolean> => {\r\n    try {\r\n      cacheService.set(NOTIFICATION_CONFIG_KEY, config)\r\n      return true\r\n    } catch (error) {\r\n      console.error(\"Erro ao salvar configurações de notificações:\", error)\r\n      return false\r\n    }\r\n  },\r\n\r\n  // Carregar configurações de segurança\r\n  loadSecurityConfig: (): SecurityConfig => {\r\n    return cacheService.get<SecurityConfig>(SECURITY_CONFIG_KEY) || defaultSecurityConfig\r\n  },\r\n\r\n  // Salvar configurações de segurança\r\n  saveSecurityConfig: async (config: SecurityConfig): Promise<boolean> => {\r\n    try {\r\n      cacheService.set(SECURITY_CONFIG_KEY, config)\r\n      return true\r\n    } catch (error) {\r\n      console.error(\"Erro ao salvar configurações de segurança:\", error)\r\n      return false\r\n    }\r\n  },\r\n\r\n  // Detectar se o modo escuro deve ser ativado\r\n  detectDarkMode: (): boolean => {\r\n    // Verificar se há uma preferência salva\r\n    const savedConfig = cacheService.get<GeneralConfig>(GENERAL_CONFIG_KEY)\r\n    if (savedConfig && typeof savedConfig.darkMode === \"boolean\") {\r\n      return savedConfig.darkMode\r\n    }\r\n\r\n    // Verificar preferência do sistema\r\n    if (typeof window !== \"undefined\") {\r\n      return window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n    }\r\n\r\n    return false\r\n  },\r\n\r\n  // Aplicar o modo escuro\r\n  applyDarkMode: (isDarkMode: boolean): void => {\r\n    if (typeof document !== \"undefined\") {\r\n      if (isDarkMode) {\r\n        document.documentElement.classList.add(\"dark\")\r\n      } else {\r\n        document.documentElement.classList.remove(\"dark\")\r\n      }\r\n    }\r\n  },\r\n\r\n  // Limpar todas as configurações\r\n  clearAllConfigs: (): void => {\r\n    cacheService.clear(CONFIG_CACHE_PREFIX)\r\n  },\r\n}\r\n\r\nexport default configService\r\n"],"names":[],"mappings":";;;AACA;AACA;;;AAEA,wBAAwB;AACxB,MAAM,sBAAsB;AAC5B,MAAM,qBAAqB,GAAG,oBAAoB,OAAO,CAAC;AAC1D,MAAM,sBAAsB,GAAG,oBAAoB,QAAQ,CAAC;AAC5D,MAAM,0BAA0B,GAAG,oBAAoB,YAAY,CAAC;AACpE,MAAM,sBAAsB,GAAG,oBAAoB,QAAQ,CAAC;AAiC5D,iBAAiB;AACjB,MAAM,uBAAsC;IAC1C,aAAa;IACb,SAAS;IACT,OAAO;IACP,OAAO;IACP,UAAU;AACZ;AAEA,MAAM,wBAAwC;IAC5C,MAAM;IACN,MAAM;IACN,UAAU;IACV,UAAU;IACV,UAAU;AACZ;AAEA,MAAM,4BAAgD;IACpD,gBAAgB;IAChB,cAAc;IACd,aAAa;IACb,oBAAoB;AACtB;AAEA,MAAM,wBAAwC;IAC5C,gBAAgB;IAChB,eAAe;IACf,eAAe;IACf,sBAAsB;AACxB;AAEA,0BAA0B;AAC1B,MAAM,gBAAgB;IACpB,gCAAgC;IAChC,mBAAmB;QACjB,OAAO,yHAAA,CAAA,UAAY,CAAC,GAAG,CAAgB,uBAAuB;IAChE;IAEA,8BAA8B;IAC9B,mBAAmB,OAAO;QACxB,IAAI;YACF,yHAAA,CAAA,UAAY,CAAC,GAAG,CAAC,oBAAoB;YACrC,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wCAAwC;YACtD,OAAO;QACT;IACF;IAEA,2CAA2C;IAC3C,oBAAoB;QAClB,OAAO,yHAAA,CAAA,UAAY,CAAC,GAAG,CAAiB,wBAAwB;IAClE;IAEA,yCAAyC;IACzC,oBAAoB,OAAO;QACzB,IAAI;YACF,yHAAA,CAAA,UAAY,CAAC,GAAG,CAAC,qBAAqB;YACtC,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,mDAAmD;YACjE,OAAO;QACT;IACF;IAEA,sCAAsC;IACtC,wBAAwB,OAAO;QAC7B,IAAI;YACF,gCAAgC;YAChC,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;YAEnD,uEAAuE;YACvE,MAAM,UAAU;YAEhB,wCAAa;gBACX,wHAAA,CAAA,UAAY,CAAC,OAAO,CAAC,wBAAwB;gBAC7C,OAAO;YACT,OAAO;;YAMP;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;YACzC,wHAAA,CAAA,UAAY,CAAC,KAAK,CAAC,mBAAmB;YACtC,OAAO;QACT;IACF;IAEA,yCAAyC;IACzC,wBAAwB;QACtB,OAAO,yHAAA,CAAA,UAAY,CAAC,GAAG,CAAqB,4BAA4B;IAC1E;IAEA,uCAAuC;IACvC,wBAAwB,OAAO;QAC7B,IAAI;YACF,yHAAA,CAAA,UAAY,CAAC,GAAG,CAAC,yBAAyB;YAC1C,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iDAAiD;YAC/D,OAAO;QACT;IACF;IAEA,sCAAsC;IACtC,oBAAoB;QAClB,OAAO,yHAAA,CAAA,UAAY,CAAC,GAAG,CAAiB,wBAAwB;IAClE;IAEA,oCAAoC;IACpC,oBAAoB,OAAO;QACzB,IAAI;YACF,yHAAA,CAAA,UAAY,CAAC,GAAG,CAAC,qBAAqB;YACtC,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8CAA8C;YAC5D,OAAO;QACT;IACF;IAEA,6CAA6C;IAC7C,gBAAgB;QACd,wCAAwC;QACxC,MAAM,cAAc,yHAAA,CAAA,UAAY,CAAC,GAAG,CAAgB;QACpD,IAAI,eAAe,OAAO,YAAY,QAAQ,KAAK,WAAW;YAC5D,OAAO,YAAY,QAAQ;QAC7B;QAEA,mCAAmC;QACnC,uCAAmC;;QAEnC;QAEA,OAAO;IACT;IAEA,wBAAwB;IACxB,eAAe,CAAC;QACd,IAAI,OAAO,aAAa,aAAa;YACnC,IAAI,YAAY;gBACd,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;YACzC,OAAO;gBACL,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;YAC5C;QACF;IACF;IAEA,gCAAgC;IAChC,iBAAiB;QACf,yHAAA,CAAA,UAAY,CAAC,KAAK,CAAC;IACrB;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 618, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/services/erroService.ts"],"sourcesContent":["import toastService from \"@/services/toastService\"\r\n\r\n// Tipos de erro\r\nexport enum ErrorType {\r\n  AUTHENTICATION = \"authentication\",\r\n  AUTHORIZATION = \"authorization\",\r\n  VALIDATION = \"validation\",\r\n  SERVER = \"server\",\r\n  NETWORK = \"network\",\r\n  UNKNOWN = \"unknown\",\r\n}\r\n\r\n// Interface para erros padronizados\r\nexport interface StandardError {\r\n  type: ErrorType\r\n  message: string\r\n  details?: string\r\n  originalError?: any\r\n  statusCode?: number\r\n}\r\n\r\n// Serviço para tratamento de erros\r\nconst errorService = {\r\n  // Processar erro e retornar um objeto de erro padronizado\r\n  processError: (error: any): StandardError => {\r\n    // Erro de rede (sem conexão)\r\n    if (error.message === \"Network Error\" || !error.response) {\r\n      return {\r\n        type: ErrorType.NETWORK,\r\n        message: \"Erro de conexão\",\r\n        details: \"Não foi possível conectar ao servidor. Verifique sua conexão de internet.\",\r\n        originalError: error,\r\n      }\r\n    }\r\n\r\n    // Erro com resposta do servidor\r\n    if (error.response) {\r\n      const { status, data } = error.response\r\n\r\n      // Erro de autenticação (401)\r\n      if (status === 401) {\r\n        return {\r\n          type: ErrorType.AUTHENTICATION,\r\n          message: \"Sessão expirada\",\r\n          details: \"Sua sessão expirou. Por favor, faça login novamente.\",\r\n          statusCode: status,\r\n          originalError: error,\r\n        }\r\n      }\r\n\r\n      // Erro de autorização (403)\r\n      if (status === 403) {\r\n        return {\r\n          type: ErrorType.AUTHORIZATION,\r\n          message: \"Acesso negado\",\r\n          details: \"Você não tem permissão para acessar este recurso.\",\r\n          statusCode: status,\r\n          originalError: error,\r\n        }\r\n      }\r\n\r\n      // Erro de validação (400)\r\n      if (status === 400) {\r\n        return {\r\n          type: ErrorType.VALIDATION,\r\n          message: \"Dados inválidos\",\r\n          details: data?.message || \"Os dados fornecidos são inválidos.\",\r\n          statusCode: status,\r\n          originalError: error,\r\n        }\r\n      }\r\n\r\n      // Erro do servidor (500)\r\n      if (status >= 500) {\r\n        return {\r\n          type: ErrorType.SERVER,\r\n          message: \"Erro no servidor\",\r\n          details: data?.message || \"Ocorreu um erro no servidor. Tente novamente mais tarde.\",\r\n          statusCode: status,\r\n          originalError: error,\r\n        }\r\n      }\r\n\r\n      // Outros erros HTTP\r\n      return {\r\n        type: ErrorType.UNKNOWN,\r\n        message: \"Erro desconhecido\",\r\n        details: data?.message || `Erro ${status}: ${error.message}`,\r\n        statusCode: status,\r\n        originalError: error,\r\n      }\r\n    }\r\n\r\n    // Erro genérico\r\n    return {\r\n      type: ErrorType.UNKNOWN,\r\n      message: \"Erro desconhecido\",\r\n      details: error.message || \"Ocorreu um erro inesperado.\",\r\n      originalError: error,\r\n    }\r\n  },\r\n\r\n  // Tratar erro e mostrar toast apropriado\r\n  handleError: (error: any, customMessage?: string): StandardError => {\r\n    const standardError = errorService.processError(error)\r\n\r\n    // Log do erro para depuração\r\n    console.error(\"Erro capturado:\", standardError)\r\n\r\n    // Mostrar toast com mensagem de erro\r\n    toastService.error(customMessage || standardError.message, standardError.details)\r\n\r\n    // Redirecionar para login se for erro de autenticação\r\n    if (standardError.type === ErrorType.AUTHENTICATION && typeof window !== \"undefined\") {\r\n      setTimeout(() => {\r\n        window.location.href = \"/login\"\r\n      }, 2000)\r\n    }\r\n\r\n    return standardError\r\n  },\r\n\r\n  // Tratar erro silenciosamente (sem toast)\r\n  handleErrorSilently: (error: any): StandardError => {\r\n    const standardError = errorService.processError(error)\r\n    console.error(\"Erro capturado (silencioso):\", standardError)\r\n    return standardError\r\n  },\r\n\r\n  // Verificar se é um erro de autenticação\r\n  isAuthenticationError: (error: any): boolean => {\r\n    return error?.response?.status === 401\r\n  },\r\n\r\n  // Verificar se é um erro de autorização\r\n  isAuthorizationError: (error: any): boolean => {\r\n    return error?.response?.status === 403\r\n  },\r\n\r\n  // Verificar se é um erro de rede\r\n  isNetworkError: (error: any): boolean => {\r\n    return error.message === \"Network Error\" || !error.response\r\n  },\r\n}\r\n\r\nexport default errorService\r\n"],"names":[],"mappings":";;;;AAAA;;AAGO,IAAA,AAAK,mCAAA;;;;;;;WAAA;;AAkBZ,mCAAmC;AACnC,MAAM,eAAe;IACnB,0DAA0D;IAC1D,cAAc,CAAC;QACb,6BAA6B;QAC7B,IAAI,MAAM,OAAO,KAAK,mBAAmB,CAAC,MAAM,QAAQ,EAAE;YACxD,OAAO;gBACL,IAAI;gBACJ,SAAS;gBACT,SAAS;gBACT,eAAe;YACjB;QACF;QAEA,gCAAgC;QAChC,IAAI,MAAM,QAAQ,EAAE;YAClB,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,QAAQ;YAEvC,6BAA6B;YAC7B,IAAI,WAAW,KAAK;gBAClB,OAAO;oBACL,IAAI;oBACJ,SAAS;oBACT,SAAS;oBACT,YAAY;oBACZ,eAAe;gBACjB;YACF;YAEA,4BAA4B;YAC5B,IAAI,WAAW,KAAK;gBAClB,OAAO;oBACL,IAAI;oBACJ,SAAS;oBACT,SAAS;oBACT,YAAY;oBACZ,eAAe;gBACjB;YACF;YAEA,0BAA0B;YAC1B,IAAI,WAAW,KAAK;gBAClB,OAAO;oBACL,IAAI;oBACJ,SAAS;oBACT,SAAS,MAAM,WAAW;oBAC1B,YAAY;oBACZ,eAAe;gBACjB;YACF;YAEA,yBAAyB;YACzB,IAAI,UAAU,KAAK;gBACjB,OAAO;oBACL,IAAI;oBACJ,SAAS;oBACT,SAAS,MAAM,WAAW;oBAC1B,YAAY;oBACZ,eAAe;gBACjB;YACF;YAEA,oBAAoB;YACpB,OAAO;gBACL,IAAI;gBACJ,SAAS;gBACT,SAAS,MAAM,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE,MAAM,OAAO,EAAE;gBAC5D,YAAY;gBACZ,eAAe;YACjB;QACF;QAEA,gBAAgB;QAChB,OAAO;YACL,IAAI;YACJ,SAAS;YACT,SAAS,MAAM,OAAO,IAAI;YAC1B,eAAe;QACjB;IACF;IAEA,yCAAyC;IACzC,aAAa,CAAC,OAAY;QACxB,MAAM,gBAAgB,aAAa,YAAY,CAAC;QAEhD,6BAA6B;QAC7B,QAAQ,KAAK,CAAC,mBAAmB;QAEjC,qCAAqC;QACrC,wHAAA,CAAA,UAAY,CAAC,KAAK,CAAC,iBAAiB,cAAc,OAAO,EAAE,cAAc,OAAO;QAEhF,sDAAsD;QACtD,uCAAsF;;QAItF;QAEA,OAAO;IACT;IAEA,0CAA0C;IAC1C,qBAAqB,CAAC;QACpB,MAAM,gBAAgB,aAAa,YAAY,CAAC;QAChD,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;IACT;IAEA,yCAAyC;IACzC,uBAAuB,CAAC;QACtB,OAAO,OAAO,UAAU,WAAW;IACrC;IAEA,wCAAwC;IACxC,sBAAsB,CAAC;QACrB,OAAO,OAAO,UAAU,WAAW;IACrC;IAEA,iCAAiC;IACjC,gBAAgB,CAAC;QACf,OAAO,MAAM,OAAO,KAAK,mBAAmB,CAAC,MAAM,QAAQ;IAC7D;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 745, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SteeL-Note/Documents/WorkspaceVScode/sistema-gestao-front/app/configuracoes/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Switch } from \"@/components/ui/switch\"\r\nimport { useToast } from \"@/components/ui/use-toast\"\r\nimport { useRouter } from \"next/navigation\"\r\nimport { Database, Globe, Bell, Shield, Moon, Sun, Check, AlertTriangle } from \"lucide-react\"\r\nimport { BackButton } from \"@/components/ui/BackButton\"\r\nimport configService, {\r\n  type GeneralConfig,\r\n  type DatabaseConfig,\r\n  type NotificationConfig,\r\n  type SecurityConfig,\r\n} from \"@/services/configService\"\r\nimport errorService from \"@/services/erroService\"\r\n\r\n\r\nexport default function ConfiguracoesPage() {\r\n  const router = useRouter()\r\n  const { toast } = useToast()\r\n\r\n  // Estados para cada seção de configuração\r\n  const [generalConfig, setGeneralConfig] = useState<GeneralConfig>(configService.loadGeneralConfig())\r\n  const [databaseConfig, setDatabaseConfig] = useState<DatabaseConfig>(configService.loadDatabaseConfig())\r\n  const [notificationConfig, setNotificationConfig] = useState<NotificationConfig>(\r\n    configService.loadNotificationConfig(),\r\n  )\r\n  const [securityConfig, setSecurityConfig] = useState<SecurityConfig>(configService.loadSecurityConfig())\r\n\r\n  // Estados para controle de UI\r\n  const [activeTab, setActiveTab] = useState(\"geral\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [testingConnection, setTestingConnection] = useState(false)\r\n  const [feedback, setFeedback] = useState<{ type: \"success\" | \"error\"; message: string } | null>(null)\r\n\r\n  // Efeito para aplicar o tema escuro quando o componente montar\r\n  useEffect(() => {\r\n    const isDarkMode = configService.detectDarkMode()\r\n    setGeneralConfig((prev) => ({ ...prev, darkMode: isDarkMode }))\r\n    configService.applyDarkMode(isDarkMode)\r\n  }, [])\r\n\r\n  // Efeito para aplicar o tema escuro quando a configuração mudar\r\n  useEffect(() => {\r\n    configService.applyDarkMode(generalConfig.darkMode)\r\n  }, [generalConfig.darkMode])\r\n\r\n  // Manipuladores para salvar cada seção de configuração\r\n  const handleSaveGeneralConfig = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    setFeedback(null)\r\n\r\n    try {\r\n      const success = await configService.saveGeneralConfig(generalConfig)\r\n      if (success) {\r\n        setFeedback({ type: \"success\", message: \"Configurações gerais salvas com sucesso!\" })\r\n        toast({\r\n          title: \"Configurações salvas\",\r\n          description: \"As configurações gerais foram salvas com sucesso.\",\r\n        })\r\n      }\r\n    } catch (error) {\r\n      setFeedback({ type: \"error\", message: \"Erro ao salvar configurações gerais.\" })\r\n      errorService.handleError(error, \"Erro ao salvar configurações\")\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleSaveDatabaseConfig = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    setFeedback(null)\r\n\r\n    try {\r\n      const success = await configService.saveDatabaseConfig(databaseConfig)\r\n      if (success) {\r\n        setFeedback({ type: \"success\", message: \"Configurações de banco de dados salvas com sucesso!\" })\r\n        toast({\r\n          title: \"Configurações salvas\",\r\n          description: \"As configurações de banco de dados foram salvas com sucesso.\",\r\n        })\r\n      }\r\n    } catch (error) {\r\n      setFeedback({ type: \"error\", message: \"Erro ao salvar configurações de banco de dados.\" })\r\n      errorService.handleError(error, \"Erro ao salvar configurações\")\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleSaveNotificationConfig = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    setFeedback(null)\r\n\r\n    try {\r\n      const success = await configService.saveNotificationConfig(notificationConfig)\r\n      if (success) {\r\n        setFeedback({ type: \"success\", message: \"Configurações de notificações salvas com sucesso!\" })\r\n        toast({\r\n          title: \"Configurações salvas\",\r\n          description: \"As configurações de notificações foram salvas com sucesso.\",\r\n        })\r\n      }\r\n    } catch (error) {\r\n      setFeedback({ type: \"error\", message: \"Erro ao salvar configurações de notificações.\" })\r\n      errorService.handleError(error, \"Erro ao salvar configurações\")\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleSaveSecurityConfig = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    setFeedback(null)\r\n\r\n    try {\r\n      const success = await configService.saveSecurityConfig(securityConfig)\r\n      if (success) {\r\n        setFeedback({ type: \"success\", message: \"Configurações de segurança salvas com sucesso!\" })\r\n        toast({\r\n          title: \"Configurações salvas\",\r\n          description: \"As configurações de segurança foram salvas com sucesso.\",\r\n        })\r\n      }\r\n    } catch (error) {\r\n      setFeedback({ type: \"error\", message: \"Erro ao salvar configurações de segurança.\" })\r\n      errorService.handleError(error, \"Erro ao salvar configurações\")\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // Testar conexão com o banco de dados\r\n  const handleTestConnection = async () => {\r\n    setTestingConnection(true)\r\n    setFeedback(null)\r\n\r\n    try {\r\n      await configService.testDatabaseConnection(databaseConfig)\r\n    } catch (error) {\r\n      // O erro já é tratado pelo configService\r\n    } finally {\r\n      setTestingConnection(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container py-6\">\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <BackButton />\r\n          <h1 className=\"text-3xl font-bold\">Configurações do Sistema</h1>\r\n        </div>\r\n      </div>\r\n\r\n      {feedback && (\r\n        <div\r\n          className={`mb-4 p-4 rounded-md ${feedback.type === \"success\" ? \"bg-green-50 text-green-800 border border-green-200\" : \"bg-red-50 text-red-800 border border-red-200\"}`}\r\n        >\r\n          <div className=\"flex items-center\">\r\n            {feedback.type === \"success\" ? (\r\n              <Check className=\"h-5 w-5 mr-2 text-green-500\" />\r\n            ) : (\r\n              <AlertTriangle className=\"h-5 w-5 mr-2 text-red-500\" />\r\n            )}\r\n            <span>{feedback.message}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"geral\">\r\n            <Globe className=\"h-4 w-4 mr-2\" />\r\n            Geral\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"banco-dados\">\r\n            <Database className=\"h-4 w-4 mr-2\" />\r\n            Banco de Dados\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"notificacoes\">\r\n            <Bell className=\"h-4 w-4 mr-2\" />\r\n            Notificações\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"seguranca\">\r\n            <Shield className=\"h-4 w-4 mr-2\" />\r\n            Segurança\r\n          </TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"geral\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Configurações Gerais</CardTitle>\r\n              <CardDescription>\r\n                Configure as opções gerais do sistema, como nome da empresa, tema e idioma.\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <form onSubmit={handleSaveGeneralConfig} className=\"space-y-4\">\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"empresa\">Nome da Empresa</Label>\r\n                  <Input\r\n                    id=\"empresa\"\r\n                    value={generalConfig.companyName}\r\n                    onChange={(e) => setGeneralConfig({ ...generalConfig, companyName: e.target.value })}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"endereco\">Endereço</Label>\r\n                  <Input\r\n                    id=\"endereco\"\r\n                    value={generalConfig.address}\r\n                    onChange={(e) => setGeneralConfig({ ...generalConfig, address: e.target.value })}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"telefone\">Telefone</Label>\r\n                  <Input\r\n                    id=\"telefone\"\r\n                    value={generalConfig.phone}\r\n                    onChange={(e) => setGeneralConfig({ ...generalConfig, phone: e.target.value })}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"email\">Email</Label>\r\n                  <Input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    value={generalConfig.email}\r\n                    onChange={(e) => setGeneralConfig({ ...generalConfig, email: e.target.value })}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex flex-col gap-1\">\r\n                    <Label htmlFor=\"dark-mode\">Modo Escuro</Label>\r\n                    <span className=\"text-sm text-muted-foreground\">Ativar o tema escuro para o sistema</span>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Sun className=\"h-4 w-4 text-muted-foreground\" />\r\n                    <Switch\r\n                      id=\"dark-mode\"\r\n                      checked={generalConfig.darkMode}\r\n                      onCheckedChange={(checked) => setGeneralConfig({ ...generalConfig, darkMode: checked })}\r\n                    />\r\n                    <Moon className=\"h-4 w-4 text-muted-foreground\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <Button type=\"submit\" disabled={loading} className=\"mt-4\">\r\n                  {loading ? \"Salvando...\" : \"Salvar Configurações\"}\r\n                </Button>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"banco-dados\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Configurações do Banco de Dados</CardTitle>\r\n              <CardDescription>Configure a conexão com o banco de dados PostgreSQL.</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <form onSubmit={handleSaveDatabaseConfig} className=\"space-y-4\">\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"db-host\">Host</Label>\r\n                  <Input\r\n                    id=\"db-host\"\r\n                    value={databaseConfig.host}\r\n                    onChange={(e) => setDatabaseConfig({ ...databaseConfig, host: e.target.value })}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"db-port\">Porta</Label>\r\n                  <Input\r\n                    id=\"db-port\"\r\n                    value={databaseConfig.port}\r\n                    onChange={(e) => setDatabaseConfig({ ...databaseConfig, port: e.target.value })}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"db-name\">Nome do Banco</Label>\r\n                  <Input\r\n                    id=\"db-name\"\r\n                    value={databaseConfig.database}\r\n                    onChange={(e) => setDatabaseConfig({ ...databaseConfig, database: e.target.value })}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"db-user\">Usuário</Label>\r\n                  <Input\r\n                    id=\"db-user\"\r\n                    value={databaseConfig.username}\r\n                    onChange={(e) => setDatabaseConfig({ ...databaseConfig, username: e.target.value })}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"db-password\">Senha</Label>\r\n                  <Input\r\n                    id=\"db-password\"\r\n                    type=\"password\"\r\n                    value={databaseConfig.password}\r\n                    onChange={(e) => setDatabaseConfig({ ...databaseConfig, password: e.target.value })}\r\n                    placeholder=\"********\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex justify-between items-center pt-4\">\r\n                  <Button type=\"button\" variant=\"outline\" onClick={handleTestConnection} disabled={testingConnection}>\r\n                    {testingConnection ? \"Testando...\" : \"Testar Conexão\"}\r\n                  </Button>\r\n                  <Button type=\"submit\" disabled={loading}>\r\n                    {loading ? \"Salvando...\" : \"Salvar Configurações\"}\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"notificacoes\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Configurações de Notificações</CardTitle>\r\n              <CardDescription>Configure como e quando o sistema deve enviar notificações.</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <form onSubmit={handleSaveNotificationConfig} className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex flex-col gap-1\">\r\n                    <Label htmlFor=\"notif-estoque\">Alertas de Estoque Baixo</Label>\r\n                    <span className=\"text-sm text-muted-foreground\">\r\n                      Receber notificações quando o estoque estiver baixo\r\n                    </span>\r\n                  </div>\r\n                  <Switch\r\n                    id=\"notif-estoque\"\r\n                    checked={notificationConfig.lowStockAlerts}\r\n                    onCheckedChange={(checked) =>\r\n                      setNotificationConfig({ ...notificationConfig, lowStockAlerts: checked })\r\n                    }\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex flex-col gap-1\">\r\n                    <Label htmlFor=\"notif-vendas\">Relatórios de Vendas</Label>\r\n                    <span className=\"text-sm text-muted-foreground\">Receber relatórios diários de vendas</span>\r\n                  </div>\r\n                  <Switch\r\n                    id=\"notif-vendas\"\r\n                    checked={notificationConfig.salesReports}\r\n                    onCheckedChange={(checked) =>\r\n                      setNotificationConfig({ ...notificationConfig, salesReports: checked })\r\n                    }\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex flex-col gap-1\">\r\n                    <Label htmlFor=\"notif-login\">Alertas de Login</Label>\r\n                    <span className=\"text-sm text-muted-foreground\">\r\n                      Receber notificações de novos logins no sistema\r\n                    </span>\r\n                  </div>\r\n                  <Switch\r\n                    id=\"notif-login\"\r\n                    checked={notificationConfig.loginAlerts}\r\n                    onCheckedChange={(checked) =>\r\n                      setNotificationConfig({ ...notificationConfig, loginAlerts: checked })\r\n                    }\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex flex-col gap-1\">\r\n                    <Label htmlFor=\"notif-email\">Notificações por Email</Label>\r\n                    <span className=\"text-sm text-muted-foreground\">\r\n                      Enviar notificações por email além das notificações no sistema\r\n                    </span>\r\n                  </div>\r\n                  <Switch\r\n                    id=\"notif-email\"\r\n                    checked={notificationConfig.emailNotifications}\r\n                    onCheckedChange={(checked) =>\r\n                      setNotificationConfig({ ...notificationConfig, emailNotifications: checked })\r\n                    }\r\n                  />\r\n                </div>\r\n\r\n                <Button type=\"submit\" disabled={loading} className=\"mt-4\">\r\n                  {loading ? \"Salvando...\" : \"Salvar Configurações\"}\r\n                </Button>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"seguranca\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Configurações de Segurança</CardTitle>\r\n              <CardDescription>Configure as opções de segurança do sistema.</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <form onSubmit={handleSaveSecurityConfig} className=\"space-y-4\">\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"session-timeout\">Tempo de Sessão (minutos)</Label>\r\n                  <Input\r\n                    id=\"session-timeout\"\r\n                    type=\"number\"\r\n                    value={securityConfig.sessionTimeout}\r\n                    onChange={(e) =>\r\n                      setSecurityConfig({ ...securityConfig, sessionTimeout: Number.parseInt(e.target.value) || 30 })\r\n                    }\r\n                    min=\"1\"\r\n                    max=\"1440\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"grid gap-2\">\r\n                  <Label htmlFor=\"login-attempts\">Tentativas de Login</Label>\r\n                  <Input\r\n                    id=\"login-attempts\"\r\n                    type=\"number\"\r\n                    value={securityConfig.loginAttempts}\r\n                    onChange={(e) =>\r\n                      setSecurityConfig({ ...securityConfig, loginAttempts: Number.parseInt(e.target.value) || 3 })\r\n                    }\r\n                    min=\"1\"\r\n                    max=\"10\"\r\n                    required\r\n                  />\r\n                  <span className=\"text-sm text-muted-foreground\">\r\n                    Número de tentativas de login antes de bloquear a conta\r\n                  </span>\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex flex-col gap-1\">\r\n                    <Label htmlFor=\"two-factor\">Autenticação de Dois Fatores</Label>\r\n                    <span className=\"text-sm text-muted-foreground\">\r\n                      Exigir autenticação de dois fatores para login\r\n                    </span>\r\n                  </div>\r\n                  <Switch\r\n                    id=\"two-factor\"\r\n                    checked={securityConfig.twoFactorAuth}\r\n                    onCheckedChange={(checked) => setSecurityConfig({ ...securityConfig, twoFactorAuth: checked })}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex flex-col gap-1\">\r\n                    <Label htmlFor=\"password-policy\">Política de Senhas Forte</Label>\r\n                    <span className=\"text-sm text-muted-foreground\">\r\n                      Exigir senhas fortes (mínimo 8 caracteres, letras, números e símbolos)\r\n                    </span>\r\n                  </div>\r\n                  <Switch\r\n                    id=\"password-policy\"\r\n                    checked={securityConfig.strongPasswordPolicy}\r\n                    onCheckedChange={(checked) =>\r\n                      setSecurityConfig({ ...securityConfig, strongPasswordPolicy: checked })\r\n                    }\r\n                  />\r\n                </div>\r\n\r\n                <Button type=\"submit\" disabled={loading} className=\"mt-4\">\r\n                  {loading ? \"Salvando...\" : \"Salvar Configurações\"}\r\n                </Button>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAMA;AArBA;;;;;;;;;;;;;;;AAwBe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,WAAQ,AAAD;IAEzB,0CAA0C;IAC1C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,yHAAA,CAAA,UAAa,CAAC,iBAAiB;IACjG,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,yHAAA,CAAA,UAAa,CAAC,kBAAkB;IACrG,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EACzD,yHAAA,CAAA,UAAa,CAAC,sBAAsB;IAEtC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,yHAAA,CAAA,UAAa,CAAC,kBAAkB;IAErG,8BAA8B;IAC9B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAyD;IAEhG,+DAA+D;IAC/D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa,yHAAA,CAAA,UAAa,CAAC,cAAc;QAC/C,iBAAiB,CAAC,OAAS,CAAC;gBAAE,GAAG,IAAI;gBAAE,UAAU;YAAW,CAAC;QAC7D,yHAAA,CAAA,UAAa,CAAC,aAAa,CAAC;IAC9B,GAAG,EAAE;IAEL,gEAAgE;IAChE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,yHAAA,CAAA,UAAa,CAAC,aAAa,CAAC,cAAc,QAAQ;IACpD,GAAG;QAAC,cAAc,QAAQ;KAAC;IAE3B,uDAAuD;IACvD,MAAM,0BAA0B,OAAO;QACrC,EAAE,cAAc;QAChB,WAAW;QACX,YAAY;QAEZ,IAAI;YACF,MAAM,UAAU,MAAM,yHAAA,CAAA,UAAa,CAAC,iBAAiB,CAAC;YACtD,IAAI,SAAS;gBACX,YAAY;oBAAE,MAAM;oBAAW,SAAS;gBAA2C;gBACnF,MAAM;oBACJ,OAAO;oBACP,aAAa;gBACf;YACF;QACF,EAAE,OAAO,OAAO;YACd,YAAY;gBAAE,MAAM;gBAAS,SAAS;YAAuC;YAC7E,uHAAA,CAAA,UAAY,CAAC,WAAW,CAAC,OAAO;QAClC,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,2BAA2B,OAAO;QACtC,EAAE,cAAc;QAChB,WAAW;QACX,YAAY;QAEZ,IAAI;YACF,MAAM,UAAU,MAAM,yHAAA,CAAA,UAAa,CAAC,kBAAkB,CAAC;YACvD,IAAI,SAAS;gBACX,YAAY;oBAAE,MAAM;oBAAW,SAAS;gBAAsD;gBAC9F,MAAM;oBACJ,OAAO;oBACP,aAAa;gBACf;YACF;QACF,EAAE,OAAO,OAAO;YACd,YAAY;gBAAE,MAAM;gBAAS,SAAS;YAAkD;YACxF,uHAAA,CAAA,UAAY,CAAC,WAAW,CAAC,OAAO;QAClC,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,+BAA+B,OAAO;QAC1C,EAAE,cAAc;QAChB,WAAW;QACX,YAAY;QAEZ,IAAI;YACF,MAAM,UAAU,MAAM,yHAAA,CAAA,UAAa,CAAC,sBAAsB,CAAC;YAC3D,IAAI,SAAS;gBACX,YAAY;oBAAE,MAAM;oBAAW,SAAS;gBAAoD;gBAC5F,MAAM;oBACJ,OAAO;oBACP,aAAa;gBACf;YACF;QACF,EAAE,OAAO,OAAO;YACd,YAAY;gBAAE,MAAM;gBAAS,SAAS;YAAgD;YACtF,uHAAA,CAAA,UAAY,CAAC,WAAW,CAAC,OAAO;QAClC,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,2BAA2B,OAAO;QACtC,EAAE,cAAc;QAChB,WAAW;QACX,YAAY;QAEZ,IAAI;YACF,MAAM,UAAU,MAAM,yHAAA,CAAA,UAAa,CAAC,kBAAkB,CAAC;YACvD,IAAI,SAAS;gBACX,YAAY;oBAAE,MAAM;oBAAW,SAAS;gBAAiD;gBACzF,MAAM;oBACJ,OAAO;oBACP,aAAa;gBACf;YACF;QACF,EAAE,OAAO,OAAO;YACd,YAAY;gBAAE,MAAM;gBAAS,SAAS;YAA6C;YACnF,uHAAA,CAAA,UAAY,CAAC,WAAW,CAAC,OAAO;QAClC,SAAU;YACR,WAAW;QACb;IACF;IAEA,sCAAsC;IACtC,MAAM,uBAAuB;QAC3B,qBAAqB;QACrB,YAAY;QAEZ,IAAI;YACF,MAAM,yHAAA,CAAA,UAAa,CAAC,sBAAsB,CAAC;QAC7C,EAAE,OAAO,OAAO;QACd,yCAAyC;QAC3C,SAAU;YACR,qBAAqB;QACvB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,+HAAA,CAAA,aAAU;;;;;sCACX,8OAAC;4BAAG,WAAU;sCAAqB;;;;;;;;;;;;;;;;;YAItC,0BACC,8OAAC;gBACC,WAAW,CAAC,oBAAoB,EAAE,SAAS,IAAI,KAAK,YAAY,uDAAuD,gDAAgD;0BAEvK,cAAA,8OAAC;oBAAI,WAAU;;wBACZ,SAAS,IAAI,KAAK,0BACjB,8OAAC,oMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;iDAEjB,8OAAC,wNAAA,CAAA,gBAAa;4BAAC,WAAU;;;;;;sCAE3B,8OAAC;sCAAM,SAAS,OAAO;;;;;;;;;;;;;;;;;0BAK7B,8OAAC,yHAAA,CAAA,OAAI;gBAAC,OAAO;gBAAW,eAAe;gBAAc,WAAU;;kCAC7D,8OAAC,yHAAA,CAAA,WAAQ;;0CACP,8OAAC,yHAAA,CAAA,cAAW;gCAAC,OAAM;;kDACjB,8OAAC,oMAAA,CAAA,QAAK;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;0CAGpC,8OAAC,yHAAA,CAAA,cAAW;gCAAC,OAAM;;kDACjB,8OAAC,0MAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;0CAGvC,8OAAC,yHAAA,CAAA,cAAW;gCAAC,OAAM;;kDACjB,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;0CAGnC,8OAAC,yHAAA,CAAA,cAAW;gCAAC,OAAM;;kDACjB,8OAAC,sMAAA,CAAA,SAAM;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;;;;;;;kCAKvC,8OAAC,yHAAA,CAAA,cAAW;wBAAC,OAAM;kCACjB,cAAA,8OAAC,yHAAA,CAAA,OAAI;;8CACH,8OAAC,yHAAA,CAAA,aAAU;;sDACT,8OAAC,yHAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,8OAAC,yHAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAInB,8OAAC,yHAAA,CAAA,cAAW;8CACV,cAAA,8OAAC;wCAAK,UAAU;wCAAyB,WAAU;;0DACjD,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,0HAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAU;;;;;;kEACzB,8OAAC,0HAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,OAAO,cAAc,WAAW;wDAChC,UAAU,CAAC,IAAM,iBAAiB;gEAAE,GAAG,aAAa;gEAAE,aAAa,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAClF,QAAQ;;;;;;;;;;;;0DAIZ,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,0HAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAW;;;;;;kEAC1B,8OAAC,0HAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,OAAO,cAAc,OAAO;wDAC5B,UAAU,CAAC,IAAM,iBAAiB;gEAAE,GAAG,aAAa;gEAAE,SAAS,EAAE,MAAM,CAAC,KAAK;4DAAC;;;;;;;;;;;;0DAIlF,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,0HAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAW;;;;;;kEAC1B,8OAAC,0HAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,OAAO,cAAc,KAAK;wDAC1B,UAAU,CAAC,IAAM,iBAAiB;gEAAE,GAAG,aAAa;gEAAE,OAAO,EAAE,MAAM,CAAC,KAAK;4DAAC;;;;;;;;;;;;0DAIhF,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,0HAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAQ;;;;;;kEACvB,8OAAC,0HAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,MAAK;wDACL,OAAO,cAAc,KAAK;wDAC1B,UAAU,CAAC,IAAM,iBAAiB;gEAAE,GAAG,aAAa;gEAAE,OAAO,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAC5E,QAAQ;;;;;;;;;;;;0DAIZ,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,0HAAA,CAAA,QAAK;gEAAC,SAAQ;0EAAY;;;;;;0EAC3B,8OAAC;gEAAK,WAAU;0EAAgC;;;;;;;;;;;;kEAElD,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,gMAAA,CAAA,MAAG;gEAAC,WAAU;;;;;;0EACf,8OAAC,2HAAA,CAAA,SAAM;gEACL,IAAG;gEACH,SAAS,cAAc,QAAQ;gEAC/B,iBAAiB,CAAC,UAAY,iBAAiB;wEAAE,GAAG,aAAa;wEAAE,UAAU;oEAAQ;;;;;;0EAEvF,8OAAC,kMAAA,CAAA,OAAI;gEAAC,WAAU;;;;;;;;;;;;;;;;;;0DAIpB,8OAAC,2HAAA,CAAA,SAAM;gDAAC,MAAK;gDAAS,UAAU;gDAAS,WAAU;0DAChD,UAAU,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAOrC,8OAAC,yHAAA,CAAA,cAAW;wBAAC,OAAM;kCACjB,cAAA,8OAAC,yHAAA,CAAA,OAAI;;8CACH,8OAAC,yHAAA,CAAA,aAAU;;sDACT,8OAAC,yHAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,8OAAC,yHAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAEnB,8OAAC,yHAAA,CAAA,cAAW;8CACV,cAAA,8OAAC;wCAAK,UAAU;wCAA0B,WAAU;;0DAClD,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,0HAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAU;;;;;;kEACzB,8OAAC,0HAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,OAAO,eAAe,IAAI;wDAC1B,UAAU,CAAC,IAAM,kBAAkB;gEAAE,GAAG,cAAc;gEAAE,MAAM,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAC7E,QAAQ;;;;;;;;;;;;0DAIZ,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,0HAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAU;;;;;;kEACzB,8OAAC,0HAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,OAAO,eAAe,IAAI;wDAC1B,UAAU,CAAC,IAAM,kBAAkB;gEAAE,GAAG,cAAc;gEAAE,MAAM,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAC7E,QAAQ;;;;;;;;;;;;0DAIZ,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,0HAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAU;;;;;;kEACzB,8OAAC,0HAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,OAAO,eAAe,QAAQ;wDAC9B,UAAU,CAAC,IAAM,kBAAkB;gEAAE,GAAG,cAAc;gEAAE,UAAU,EAAE,MAAM,CAAC,KAAK;4DAAC;wDACjF,QAAQ;;;;;;;;;;;;0DAIZ,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,0HAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAU;;;;;;kEACzB,8OAAC,0HAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,OAAO,eAAe,QAAQ;wDAC9B,UAAU,CAAC,IAAM,kBAAkB;gEAAE,GAAG,cAAc;gEAAE,UAAU,EAAE,MAAM,CAAC,KAAK;4DAAC;wDACjF,QAAQ;;;;;;;;;;;;0DAIZ,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,0HAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAc;;;;;;kEAC7B,8OAAC,0HAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,MAAK;wDACL,OAAO,eAAe,QAAQ;wDAC9B,UAAU,CAAC,IAAM,kBAAkB;gEAAE,GAAG,cAAc;gEAAE,UAAU,EAAE,MAAM,CAAC,KAAK;4DAAC;wDACjF,aAAY;;;;;;;;;;;;0DAIhB,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,2HAAA,CAAA,SAAM;wDAAC,MAAK;wDAAS,SAAQ;wDAAU,SAAS;wDAAsB,UAAU;kEAC9E,oBAAoB,gBAAgB;;;;;;kEAEvC,8OAAC,2HAAA,CAAA,SAAM;wDAAC,MAAK;wDAAS,UAAU;kEAC7B,UAAU,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAQvC,8OAAC,yHAAA,CAAA,cAAW;wBAAC,OAAM;kCACjB,cAAA,8OAAC,yHAAA,CAAA,OAAI;;8CACH,8OAAC,yHAAA,CAAA,aAAU;;sDACT,8OAAC,yHAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,8OAAC,yHAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAEnB,8OAAC,yHAAA,CAAA,cAAW;8CACV,cAAA,8OAAC;wCAAK,UAAU;wCAA8B,WAAU;;0DACtD,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,0HAAA,CAAA,QAAK;gEAAC,SAAQ;0EAAgB;;;;;;0EAC/B,8OAAC;gEAAK,WAAU;0EAAgC;;;;;;;;;;;;kEAIlD,8OAAC,2HAAA,CAAA,SAAM;wDACL,IAAG;wDACH,SAAS,mBAAmB,cAAc;wDAC1C,iBAAiB,CAAC,UAChB,sBAAsB;gEAAE,GAAG,kBAAkB;gEAAE,gBAAgB;4DAAQ;;;;;;;;;;;;0DAK7E,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,0HAAA,CAAA,QAAK;gEAAC,SAAQ;0EAAe;;;;;;0EAC9B,8OAAC;gEAAK,WAAU;0EAAgC;;;;;;;;;;;;kEAElD,8OAAC,2HAAA,CAAA,SAAM;wDACL,IAAG;wDACH,SAAS,mBAAmB,YAAY;wDACxC,iBAAiB,CAAC,UAChB,sBAAsB;gEAAE,GAAG,kBAAkB;gEAAE,cAAc;4DAAQ;;;;;;;;;;;;0DAK3E,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,0HAAA,CAAA,QAAK;gEAAC,SAAQ;0EAAc;;;;;;0EAC7B,8OAAC;gEAAK,WAAU;0EAAgC;;;;;;;;;;;;kEAIlD,8OAAC,2HAAA,CAAA,SAAM;wDACL,IAAG;wDACH,SAAS,mBAAmB,WAAW;wDACvC,iBAAiB,CAAC,UAChB,sBAAsB;gEAAE,GAAG,kBAAkB;gEAAE,aAAa;4DAAQ;;;;;;;;;;;;0DAK1E,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,0HAAA,CAAA,QAAK;gEAAC,SAAQ;0EAAc;;;;;;0EAC7B,8OAAC;gEAAK,WAAU;0EAAgC;;;;;;;;;;;;kEAIlD,8OAAC,2HAAA,CAAA,SAAM;wDACL,IAAG;wDACH,SAAS,mBAAmB,kBAAkB;wDAC9C,iBAAiB,CAAC,UAChB,sBAAsB;gEAAE,GAAG,kBAAkB;gEAAE,oBAAoB;4DAAQ;;;;;;;;;;;;0DAKjF,8OAAC,2HAAA,CAAA,SAAM;gDAAC,MAAK;gDAAS,UAAU;gDAAS,WAAU;0DAChD,UAAU,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAOrC,8OAAC,yHAAA,CAAA,cAAW;wBAAC,OAAM;kCACjB,cAAA,8OAAC,yHAAA,CAAA,OAAI;;8CACH,8OAAC,yHAAA,CAAA,aAAU;;sDACT,8OAAC,yHAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,8OAAC,yHAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAEnB,8OAAC,yHAAA,CAAA,cAAW;8CACV,cAAA,8OAAC;wCAAK,UAAU;wCAA0B,WAAU;;0DAClD,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,0HAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAkB;;;;;;kEACjC,8OAAC,0HAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,MAAK;wDACL,OAAO,eAAe,cAAc;wDACpC,UAAU,CAAC,IACT,kBAAkB;gEAAE,GAAG,cAAc;gEAAE,gBAAgB,OAAO,QAAQ,CAAC,EAAE,MAAM,CAAC,KAAK,KAAK;4DAAG;wDAE/F,KAAI;wDACJ,KAAI;wDACJ,QAAQ;;;;;;;;;;;;0DAIZ,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,0HAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAiB;;;;;;kEAChC,8OAAC,0HAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,MAAK;wDACL,OAAO,eAAe,aAAa;wDACnC,UAAU,CAAC,IACT,kBAAkB;gEAAE,GAAG,cAAc;gEAAE,eAAe,OAAO,QAAQ,CAAC,EAAE,MAAM,CAAC,KAAK,KAAK;4DAAE;wDAE7F,KAAI;wDACJ,KAAI;wDACJ,QAAQ;;;;;;kEAEV,8OAAC;wDAAK,WAAU;kEAAgC;;;;;;;;;;;;0DAKlD,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,0HAAA,CAAA,QAAK;gEAAC,SAAQ;0EAAa;;;;;;0EAC5B,8OAAC;gEAAK,WAAU;0EAAgC;;;;;;;;;;;;kEAIlD,8OAAC,2HAAA,CAAA,SAAM;wDACL,IAAG;wDACH,SAAS,eAAe,aAAa;wDACrC,iBAAiB,CAAC,UAAY,kBAAkB;gEAAE,GAAG,cAAc;gEAAE,eAAe;4DAAQ;;;;;;;;;;;;0DAIhG,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,0HAAA,CAAA,QAAK;gEAAC,SAAQ;0EAAkB;;;;;;0EACjC,8OAAC;gEAAK,WAAU;0EAAgC;;;;;;;;;;;;kEAIlD,8OAAC,2HAAA,CAAA,SAAM;wDACL,IAAG;wDACH,SAAS,eAAe,oBAAoB;wDAC5C,iBAAiB,CAAC,UAChB,kBAAkB;gEAAE,GAAG,cAAc;gEAAE,sBAAsB;4DAAQ;;;;;;;;;;;;0DAK3E,8OAAC,2HAAA,CAAA,SAAM;gDAAC,MAAK;gDAAS,UAAU;gDAAS,WAAU;0DAChD,UAAU,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS7C","debugId":null}}]
}